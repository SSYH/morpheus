{:findings [{:type :cond-else, :message "use :else as the catch-all test expression in cond", :level :warning, :row 100, :end-row 100, :end-col 29, :col 21, :filename "src/mranderson/core.clj"} {:type :cond-else, :message "use :else as the catch-all test expression in cond", :level :warning, :row 115, :end-row 115, :end-col 44, :col 36, :filename "src/mranderson/core.clj"} {:type :cond-else, :message "use :else as the catch-all test expression in cond", :level :warning, :row 119, :end-row 119, :end-col 15, :col 7, :filename "src/mranderson/move.clj"} {:type :cond-else, :message "use :else as the catch-all test expression in cond", :level :warning, :row 159, :end-row 159, :end-col 15, :col 7, :filename "src/mranderson/move.clj"} {:type :cond-else, :message "use :else as the catch-all test expression in cond", :level :warning, :row 209, :end-row 209, :end-col 15, :col 7, :filename "src/mranderson/move.clj"} {:type :unused-import, :message "Unused import JjPackageRemapper", :level :warning, :row 8, :end-row 8, :end-col 46, :col 29, :filename "src/mranderson/util.clj"}], :summary {:error 0, :warning 6, :info 0, :type :summary, :duration 181}, :analysis {:namespace-definitions [{:filename "src/mranderson/util.clj", :row 1, :col 1, :name mranderson.util} {:filename "src/mranderson/dependency/tree.clj", :row 1, :col 1, :name mranderson.dependency.tree} {:filename "src/mranderson/dependency/resolver.clj", :row 1, :col 1, :name mranderson.dependency.resolver} {:filename "src/mranderson/core.clj", :row 1, :col 1, :name mranderson.core} {:filename "src/mranderson/move.clj", :row 9, :col 1, :name mranderson.move, :author "Stuart Sierra, Benedek Fazekas"} {:filename "src/mranderson/plugin.clj", :row 1, :col 1, :name mranderson.plugin} {:filename "src/leiningen/inline_deps.clj", :row 1, :col 1, :name leiningen.inline-deps}], :namespace-usages [{:filename "src/mranderson/util.clj", :row 2, :col 14, :from mranderson.util, :to clojure.java.io, :alias io} {:filename "src/mranderson/util.clj", :row 3, :col 14, :from mranderson.util, :to clojure.string, :alias str} {:filename "src/mranderson/util.clj", :row 4, :col 14, :from mranderson.util, :to leiningen.core.main, :alias lein-main} {:filename "src/mranderson/util.clj", :row 5, :col 14, :from mranderson.util, :to clojure.set, :alias s} {:filename "src/mranderson/dependency/tree.clj", :row 2, :col 14, :from mranderson.dependency.tree, :to clojure.tools.namespace.dependency, :alias dep} {:filename "src/mranderson/dependency/resolver.clj", :row 2, :col 14, :from mranderson.dependency.resolver, :to cemerick.pomegranate.aether, :alias aether} {:filename "src/mranderson/dependency/resolver.clj", :row 3, :col 14, :from mranderson.dependency.resolver, :to mranderson.dependency.tree, :alias t} {:filename "src/mranderson/core.clj", :row 2, :col 14, :from mranderson.core, :to clojure.java.io, :alias io} {:filename "src/mranderson/core.clj", :row 3, :col 14, :from mranderson.core, :to clojure.string, :alias str} {:filename "src/mranderson/core.clj", :row 4, :col 14, :from mranderson.core, :to clojure.tools.namespace.file} {:filename "src/mranderson/core.clj", :row 5, :col 14, :from mranderson.core, :to me.raynes.fs, :alias fs} {:filename "src/mranderson/core.clj", :row 6, :col 14, :from mranderson.core, :to mranderson.dependency.resolver, :alias dr} {:filename "src/mranderson/core.clj", :row 7, :col 14, :from mranderson.core, :to mranderson.dependency.tree, :alias t} {:filename "src/mranderson/core.clj", :row 8, :col 14, :from mranderson.core, :to mranderson.move, :alias move} {:filename "src/mranderson/core.clj", :row 9, :col 14, :from mranderson.core, :to mranderson.util, :alias u} {:filename "src/mranderson/move.clj", :row 23, :col 14, :from mranderson.move, :to clojure.string, :alias str} {:filename "src/mranderson/move.clj", :row 24, :col 14, :from mranderson.move, :to clojure.java.io, :alias io} {:filename "src/mranderson/move.clj", :row 25, :col 14, :from mranderson.move, :to mranderson.util, :alias util} {:filename "src/mranderson/move.clj", :row 26, :col 14, :from mranderson.move, :to parallel.core, :alias p} {:filename "src/mranderson/move.clj", :row 27, :col 14, :from mranderson.move, :to rewrite-clj.zip, :alias z} {:filename "src/mranderson/move.clj", :row 28, :col 14, :from mranderson.move, :to rewrite-clj.zip.base, :alias b} {:filename "src/mranderson/move.clj", :row 29, :col 14, :from mranderson.move, :to rewrite-clj.parser, :alias parser} {:filename "src/mranderson/move.clj", :row 30, :col 14, :from mranderson.move, :to rewrite-clj.reader, :alias reader} {:filename "src/mranderson/plugin.clj", :row 2, :col 14, :from mranderson.plugin, :to mranderson.util} {:filename "src/mranderson/plugin.clj", :row 3, :col 14, :from mranderson.plugin, :to clojure.tools.namespace.file} {:filename "src/leiningen/inline_deps.clj", :row 2, :col 14, :from leiningen.inline-deps, :to clojure.edn, :alias edn} {:filename "src/leiningen/inline_deps.clj", :row 3, :col 14, :from leiningen.inline-deps, :to me.raynes.fs, :alias fs} {:filename "src/leiningen/inline_deps.clj", :row 4, :col 14, :from leiningen.inline-deps, :to mranderson.core, :alias c} {:filename "src/leiningen/inline_deps.clj", :row 5, :col 14, :from leiningen.inline-deps, :to mranderson.util, :alias u}], :var-definitions [{:filename "src/mranderson/util.clj", :row 11, :col 1, :ns mranderson.util, :name clojure-source-files-relative, :fixed-arities #{1 2}} {:filename "src/mranderson/util.clj", :row 30, :col 1, :ns mranderson.util, :name sym->file-name, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 36, :col 1, :ns mranderson.util, :name relevant-clj-dep-path, :fixed-arities #{3}} {:filename "src/mranderson/util.clj", :row 46, :col 1, :ns mranderson.util, :name clojure-source-files, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 51, :col 1, :ns mranderson.util, :name class-files, :fixed-arities #{0}} {:filename "src/mranderson/util.clj", :row 61, :col 1, :ns mranderson.util, :name class-file->fully-qualified-name, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 70, :col 1, :ns mranderson.util, :name class-name->package-name, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 75, :col 1, :ns mranderson.util, :name java-class-dirs, :fixed-arities #{0}, :doc "lists subdirs of target/srcdeps which contain .class files"} {:filename "src/mranderson/util.clj", :row 84, :col 1, :ns mranderson.util, :name clean-name-version, :fixed-arities #{2}} {:filename "src/mranderson/util.clj", :row 89, :col 1, :ns mranderson.util, :name first-src-path, :fixed-arities #{2}} {:filename "src/mranderson/util.clj", :row 92, :col 1, :ns mranderson.util, :name source-dep?, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 96, :col 1, :ns mranderson.util, :name create-rule, :private true, :fixed-arities #{2}} {:filename "src/mranderson/util.clj", :row 102, :col 1, :ns mranderson.util, :name warn, :varargs-min-arity 0} {:filename "src/mranderson/util.clj", :row 105, :col 1, :ns mranderson.util, :name info, :varargs-min-arity 0} {:filename "src/mranderson/util.clj", :row 108, :col 1, :ns mranderson.util, :name debug, :varargs-min-arity 0} {:filename "src/mranderson/util.clj", :row 111, :col 1, :ns mranderson.util, :name apply-jarjar!, :fixed-arities #{2}} {:filename "src/mranderson/util.clj", :row 120, :col 1, :ns mranderson.util, :name remove-2parents, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 125, :col 1, :ns mranderson.util, :name mranderson-version, :fixed-arities #{0}} {:filename "src/mranderson/util.clj", :row 134, :col 1, :ns mranderson.util, :name file->extension, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 138, :col 1, :ns mranderson.util, :name extension->platform, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 145, :col 1, :ns mranderson.util, :name platform-comp, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 151, :col 1, :ns mranderson.util, :name cljfile->dir, :private true, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 156, :col 1, :ns mranderson.util, :name remove-subdirs, :fixed-arities #{1}} {:filename "src/mranderson/util.clj", :row 164, :col 1, :ns mranderson.util, :name clj-files->dirs, :fixed-arities #{2}} {:filename "src/mranderson/dependency/tree.clj", :row 5, :col 1, :ns mranderson.dependency.tree, :name walk-deps, :fixed-arities #{3 2}} {:filename "src/mranderson/dependency/tree.clj", :row 14, :col 1, :ns mranderson.dependency.tree, :name path-pred, :fixed-arities #{3}} {:filename "src/mranderson/dependency/tree.clj", :row 17, :col 1, :ns mranderson.dependency.tree, :name walk&expand-deps, :fixed-arities #{4 3}, :doc "Walks a dependency tree and expands it with all dependencies as walking.\n\n  This essentially means that an unresolved dependency tree is created where all nodes hold their originally\n  defined dependencies as children recursively.\n\n  Understands overrides in terms of versions so a node can be overridden at any point of the tree while it is being built.\n  This means that if the old version of the same dependency has different dependencies in its turn than the new version\n  being enforced by overriding the dependencies of the new version will be present in the subtree.\n\n  Overrides is a map where keys are paths as vectors to a dependency in an unresolved tree and values are dependencies\n  as a vector. for example\n  ```\n  {[mvxcvi/puget fipp] [fipp 0.6.14]}\n  ```\n  "} {:filename "src/mranderson/dependency/tree.clj", :row 46, :col 1, :ns mranderson.dependency.tree, :name evict-subtrees, :fixed-arities #{2}, :doc "Evict subtrees from a dependency tree.\n\n  `subtree-roots` are defined as a set of dependency names (for example `#{'org.clojure/clojure 'org.clojure/clojurescript}`\n  without their versions. Tested on a resolved tree. Assumed that it would evict all subtrees from an unresolved depedency\n  tree."} {:filename "src/mranderson/dependency/tree.clj", :row 60, :col 1, :ns mranderson.dependency.tree, :name walk-dep-tree, :fixed-arities #{5}, :doc "Walks a dependency tree in depth first order.\n\n  Applies `pre-fn` on node before going down a level. `pre-fn` calculates and returns its own context and paths,\n  these are passed down to the next level. After the subtree is processed `post-fn` gets applied using the context,\n  paths returned by `pre-fn` for the same node."} {:filename "src/mranderson/dependency/tree.clj", :row 73, :col 1, :ns mranderson.dependency.tree, :name walk-ordered-deps, :fixed-arities #{5}, :doc "Walks a flat list of dependencies.\n\n  Applies `pre-fn` on all the dependencies and collects the `pre-fn` returned contextual values and paths.\n  Runs `post-fn` on all the dependencies in a reverse order using the `pre-fn` results and paths."} {:filename "src/mranderson/dependency/tree.clj", :row 85, :col 1, :ns mranderson.dependency.tree, :name create-dep-graph, :private true, :fixed-arities #{1 3}} {:filename "src/mranderson/dependency/tree.clj", :row 99, :col 1, :ns mranderson.dependency.tree, :name topological-order, :fixed-arities #{1}} {:filename "src/mranderson/dependency/resolver.clj", :row 5, :col 1, :ns mranderson.dependency.resolver, :name resolve-source-deps, :fixed-arities #{2}, :doc "Retrieves the given dependencies using the given `repositories`"} {:filename "src/mranderson/dependency/resolver.clj", :row 11, :col 1, :ns mranderson.dependency.resolver, :name expand-dep-hierarchy, :fixed-arities #{3}, :doc "Expands the first level of the given dep hierarchy into an unresolved dependency tree.\n\n  Understands overrides so a node can be overriden at any point of the tree while it is being built."} {:filename "src/mranderson/core.clj", :row 14, :col 1, :ns mranderson.core, :name print-dep, :private true, :fixed-arities #{2}} {:filename "src/mranderson/core.clj", :row 17, :col 1, :ns mranderson.core, :name zip-target-file, :private true, :fixed-arities #{2}} {:filename "src/mranderson/core.clj", :row 22, :col 1, :ns mranderson.core, :name unzip, :private true, :fixed-arities #{1 2}, :doc "Takes the path to a zipfile source and unzips it to target-dir."} {:filename "src/mranderson/core.clj", :row 44, :col 1, :ns mranderson.core, :name cljfile->prefix, :private true, :fixed-arities #{1}} {:filename "src/mranderson/core.clj", :row 49, :col 1, :ns mranderson.core, :name possible-prefixes, :private true, :fixed-arities #{1}} {:filename "src/mranderson/core.clj", :row 59, :col 1, :ns mranderson.core, :name replacement-prefix, :private true, :fixed-arities #{5}} {:filename "src/mranderson/core.clj", :row 72, :col 1, :ns mranderson.core, :name replacement, :private true, :fixed-arities #{3}} {:filename "src/mranderson/core.clj", :row 83, :col 1, :ns mranderson.core, :name update-path-in-file, :private true, :fixed-arities #{3}} {:filename "src/mranderson/core.clj", :row 89, :col 1, :ns mranderson.core, :name import-fragment-left, :private true, :fixed-arities #{1}} {:filename "src/mranderson/core.clj", :row 102, :col 1, :ns mranderson.core, :name import-fragment, :private true, :fixed-arities #{1}} {:filename "src/mranderson/core.clj", :row 117, :col 1, :ns mranderson.core, :name retrieve-import, :private true, :fixed-arities #{2}} {:filename "src/mranderson/core.clj", :row 123, :col 1, :ns mranderson.core, :name find-orig-import, :private true, :fixed-arities #{2}} {:filename "src/mranderson/core.clj", :row 130, :col 1, :ns mranderson.core, :name class-deps-jar!, :private true, :fixed-arities #{0}, :doc "creates jar containing the deps class files"} {:filename "src/mranderson/core.clj", :row 146, :col 1, :ns mranderson.core, :name replace-class-deps!, :private true, :fixed-arities #{0}} {:filename "src/mranderson/core.clj", :row 157, :col 1, :ns mranderson.core, :name filter-clj-files, :private true, :fixed-arities #{2}} {:filename "src/mranderson/core.clj", :row 164, :col 1, :ns mranderson.core, :name prefix-dependency-imports!, :private true, :fixed-arities #{6}} {:filename "src/mranderson/core.clj", :row 199, :col 1, :ns mranderson.core, :name update-artifact!, :private true, :fixed-arities #{3}} {:filename "src/mranderson/core.clj", :row 244, :col 1, :ns mranderson.core, :name unzip-artifact!, :private true, :fixed-arities #{3}} {:filename "src/mranderson/core.clj", :row 261, :col 1, :ns mranderson.core, :name copy-source-files, :fixed-arities #{2}} {:filename "src/mranderson/core.clj", :row 265, :col 1, :ns mranderson.core, :name mranderson-unresolved-deps!, :private true, :fixed-arities #{3}, :doc "Unzips and transforms files in an unresolved dependency tree."} {:filename "src/mranderson/core.clj", :row 273, :col 1, :ns mranderson.core, :name mranderson-resolved-deps!, :private true, :fixed-arities #{4}, :doc "Unzips and transforms files in a resolved dependency tree.\n\n  Creates a topological order based on the expanded tree. Flattens out the resolved tree into a list like data structure\n  ordered by the expanded tree based topological order. Processes this ordered list with `walk-ordered-deps` that first\n  unzips all deps and collects their contextual info and then performs the source transformation in\n  reverse topological order."} {:filename "src/mranderson/core.clj", :row 299, :col 1, :ns mranderson.core, :name mranderson, :fixed-arities #{4}, :doc "Inline and shadow dependencies so they can not interfere with other libraries' dependencies.\n\n  `repositories` to resolve dependencies, `dependencies` list of dependencies to inline and shadow, `ctx` for opts and project specific attributes, `paths` for project specific paths.\n\n  `ctx` in detail:\n  - pname: project name\n  - pversion: project version\n  - pprefix: project prefix, defaults to mranderson{rnd}\n  - skip-repackage-java-classes: Skips shadowing java classes part of a dependency if true\n  - prefix-exclusions: prefixes to exclude when prefixing imports for java classes\n  - unresolved-tree: switch to unresolved tree mode if true\n  - overrides: overrides in the unresolved tree in unresolved tree mode\n  - expositions: transient dependencies made available for the project source files in unresolved tree mode\n  - watermark: meta flag to mark inlined dependencies"} {:filename "src/mranderson/move.clj", :row 33, :col 1, :ns mranderson.move, :name update-file, :private true, :varargs-min-arity 2, :doc "Reads file as a string, calls f on the string plus any args, then\n  writes out return value of f as the new contents of file. Does not\n  modify file if the content is unchanged."} {:filename "src/mranderson/move.clj", :row 43, :col 1, :ns mranderson.move, :name sym->file, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 47, :col 1, :ns mranderson.move, :name update?, :private true, :fixed-arities #{2}} {:filename "src/mranderson/move.clj", :row 56, :col 1, :ns mranderson.move, :name clojure-source-files, :private true, :fixed-arities #{2}} {:filename "src/mranderson/move.clj", :row 66, :col 1, :ns mranderson.move, :name prefix-libspec, :private true, :fixed-arities #{1}} {:filename "src/mranderson/move.clj", :row 70, :col 1, :ns mranderson.move, :name java-package, :private true, :fixed-arities #{1}} {:filename "src/mranderson/move.clj", :row 73, :col 1, :ns mranderson.move, :name java-style-prefix?, :private true, :fixed-arities #{2}} {:filename "src/mranderson/move.clj", :row 79, :col 1, :ns mranderson.move, :name libspec-prefix?, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 93, :col 1, :ns mranderson.move, :name contains-sym?, :private true, :fixed-arities #{2}} {:filename "src/mranderson/move.clj", :row 100, :col 1, :ns mranderson.move, :name ->new-node, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 114, :col 1, :ns mranderson.move, :name replace-in-node, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 121, :col 1, :ns mranderson.move, :name ns-decl?, :private true, :fixed-arities #{1}} {:filename "src/mranderson/move.clj", :row 125, :col 1, :ns mranderson.move, :name ns-form-placeholder} {:filename "src/mranderson/move.clj", :row 127, :col 1, :ns mranderson.move, :name split-ns-form-ns-body, :private true, :fixed-arities #{1}, :doc "Returns ns form as a rewrite-clj loc and the ns body as string with a place holder for the ns form."} {:filename "src/mranderson/move.clj", :row 140, :col 1, :ns mranderson.move, :name watermark-ns-maybe, :private true, :fixed-arities #{2}} {:filename "src/mranderson/move.clj", :row 149, :col 1, :ns mranderson.move, :name import?, :private true, :fixed-arities #{1}} {:filename "src/mranderson/move.clj", :row 154, :col 1, :ns mranderson.move, :name ->new-import-node, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 161, :col 1, :ns mranderson.move, :name replace-in-import*, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 169, :col 1, :ns mranderson.move, :name replace-in-import, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 177, :col 1, :ns mranderson.move, :name replace-in-ns-form, :private true, :fixed-arities #{4}} {:filename "src/mranderson/move.clj", :row 185, :col 1, :ns mranderson.move, :name source-replacement, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 212, :col 1, :ns mranderson.move, :name symbol-regex, :private true} {:filename "src/mranderson/move.clj", :row 218, :col 1, :ns mranderson.move, :name replace-in-source, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 221, :col 1, :ns mranderson.move, :name after-platfrom-marker?, :private true, :fixed-arities #{2}} {:filename "src/mranderson/move.clj", :row 225, :col 1, :ns mranderson.move, :name find-and-replace-platform-specific-subforms, :private true, :fixed-arities #{2}} {:filename "src/mranderson/move.clj", :row 232, :col 1, :ns mranderson.move, :name restore-platform-specific-subforms, :private true, :fixed-arities #{3}} {:filename "src/mranderson/move.clj", :row 239, :col 1, :ns mranderson.move, :name replace-ns-symbol, :fixed-arities #{6}, :doc "ALPHA: subject to change. Given Clojure source as a file, replaces\n  all occurrences of the namespace name old-sym with new-sym and\n  returns modified source as a string.\n\n  Splits the source file, parses the ns macro if found to do all the necessary\n  transformations. Works on the body of namepsace as text as simpler transformations\n  are needed. When done puts the ns form and body back together."} {:filename "src/mranderson/move.clj", :row 266, :col 1, :ns mranderson.move, :name move-ns-file, :fixed-arities #{4}, :doc "ALPHA: subject to change. Moves the .clj or .cljc source file (found relative\n  to source-path) for the namespace named old-sym to a file for a\n  namespace named new-sym.\n\n  WARNING: This function moves and deletes your source files! Make\n  sure you have a backup or version control."} {:filename "src/mranderson/move.clj", :row 285, :col 1, :ns mranderson.move, :name replace-ns-symbol-in-source-files, :fixed-arities #{5}, :doc "Replaces all occurrences of the old name with the new name in\n  all Clojure source files found in dirs."} {:filename "src/mranderson/move.clj", :row 296, :col 1, :ns mranderson.move, :name move-ns, :fixed-arities #{6}, :doc "ALPHA: subject to change. Moves the .clj or .cljc source file (found relative\n  to source-path) for the namespace named old-sym to new-sym and\n  replace all occurrences of the old name with the new name in all\n  Clojure source files found in dirs.\n\n  This is partly textual transformation. It works on\n  namespaces require'd or use'd from a prefix list.\n\n  WARNING: This function modifies and deletes your source files! Make\n  sure you have a backup or version control."} {:filename "src/mranderson/plugin.clj", :row 5, :col 1, :ns mranderson.plugin, :name find-gen-class-ns, :private true, :fixed-arities #{2}} {:filename "src/mranderson/plugin.clj", :row 11, :col 1, :ns mranderson.plugin, :name middleware, :fixed-arities #{1}, :doc "Handles :gen-class instances in deps which need AOT"} {:filename "src/leiningen/inline_deps.clj", :row 8, :col 1, :ns leiningen.inline-deps, :name lookup-opt, :fixed-arities #{2}} {:filename "src/leiningen/inline_deps.clj", :row 11, :col 1, :ns leiningen.inline-deps, :name generate-default-project-prefix, :private true, :fixed-arities #{0}} {:filename "src/leiningen/inline_deps.clj", :row 16, :col 1, :ns leiningen.inline-deps, :name lein-project->ctx, :private true, :fixed-arities #{2}} {:filename "src/leiningen/inline_deps.clj", :row 44, :col 1, :ns leiningen.inline-deps, :name initial-paths, :private true, :fixed-arities #{2}} {:filename "src/leiningen/inline_deps.clj", :row 49, :col 1, :ns leiningen.inline-deps, :name inline-deps, :varargs-min-arity 1, :doc "Inline and shadow dependencies so they can not interfere with other libraries' dependencies.\n\n  Available options:\n\n  :project-prefix           string    Project prefix to use when shadowing\n  :skip-javaclass-repackage boolean   If true Jar Jar Links won't be used to repackage java classes\n  :prefix-exclusions        list      List of prefixes that should not be processed in imports\n  :unresolved-tree          boolean   Enforces unresolved tree mode"}], :var-usages [{:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 44, :from-var clojure-source-files-relative, :arity 3, :varargs-min-arity 1, :row 13, :to clojure.core} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name let*, :arity 2, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name fn*, :arity 2, :from-var clojure-source-files-relative} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/util.clj", :from mranderson.util, :col 38, :from-var clojure-source-files-relative, :arity 2, :varargs-min-arity 4, :row 13, :to clojure.core} {:name when, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 23, :from-var clojure-source-files-relative, :arity 2, :varargs-min-arity 1, :row 13, :to clojure.core} {:filename "src/mranderson/util.clj", :row 20, :col 27, :from mranderson.util, :to java.io, :name File, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row 20, :col 27, :from mranderson.util, :to java.io, :name File, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row 21, :col 40, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .getName, :arity 1, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row 22, :col 31, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .isFile, :arity 1, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row 24, :col 32, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .endsWith, :arity 2, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row 25, :col 32, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .endsWith, :arity 2, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row 26, :col 32, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .endsWith, :arity 2, :from-var clojure-source-files-relative} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 31, :from-var clojure-source-files-relative, :arity 3, :varargs-min-arity 1, :row 23, :to clojure.core} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 26, :from-var clojure-source-files-relative, :arity 2, :varargs-min-arity 1, :row 22, :to clojure.core} {:name let, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 24, :from-var clojure-source-files-relative, :arity 2, :varargs-min-arity 1, :row 21, :to clojure.core} {:name fn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 22, :from-var clojure-source-files-relative, :arity 2, :varargs-min-arity 0, :row 20, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 44, :from-var clojure-source-files-relative, :arity 1, :varargs-min-arity 1, :row 19, :to clojure.core} {:filename "src/mranderson/util.clj", :row 19, :col 31, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .startsWith, :arity 2, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name let*, :arity 2, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name fn*, :arity 2, :from-var clojure-source-files-relative} {:fixed-arities #{2}, :name some, :filename "src/mranderson/util.clj", :from mranderson.util, :col 24, :from-var clojure-source-files-relative, :arity 2, :row 19, :to clojure.core} {:name fn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 22, :from-var clojure-source-files-relative, :arity 2, :varargs-min-arity 0, :row 18, :to clojure.core} {:filename "src/mranderson/util.clj", :row 17, :col 21, :from mranderson.util, :to clojure.core, :name file-seq, :fixed-arities #{1}, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row 16, :col 32, :from mranderson.util, :to java.io, :name File, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row 16, :col 23, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .exists, :arity 1, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name let*, :arity 2, :from-var clojure-source-files-relative} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name fn*, :arity 2, :from-var clojure-source-files-relative} {:fixed-arities #{1 2}, :name file, :filename "src/mranderson/util.clj", :from mranderson.util, :col 18, :from-var clojure-source-files-relative, :varargs-min-arity 2, :row 15, :to clojure.java.io} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/util.clj", :from mranderson.util, :col 14, :from-var clojure-source-files-relative, :arity 2, :varargs-min-arity 4, :row 15, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/util.clj", :from mranderson.util, :col 14, :from-var clojure-source-files-relative, :arity 2, :row 16, :to clojure.core} {:fixed-arities #{1}, :name mapcat, :filename "src/mranderson/util.clj", :from mranderson.util, :col 14, :from-var clojure-source-files-relative, :arity 2, :varargs-min-arity 1, :row 17, :to clojure.core} {:fixed-arities #{1 2}, :name remove, :filename "src/mranderson/util.clj", :from mranderson.util, :col 14, :from-var clojure-source-files-relative, :arity 2, :row 18, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/util.clj", :from mranderson.util, :col 14, :from-var clojure-source-files-relative, :arity 2, :row 20, :to clojure.core} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 9, :from-var clojure-source-files-relative, :arity 6, :varargs-min-arity 1, :row 14, :to clojure.core} {:name let, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 7, :from-var clojure-source-files-relative, :arity 2, :varargs-min-arity 1, :row 13, :to clojure.core} {:fixed-arities #{1 2}, :name clojure-source-files-relative, :filename "src/mranderson/util.clj", :from mranderson.util, :col 7, :from-var clojure-source-files-relative, :arity 2, :row 28, :to mranderson.util} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 11, :to clojure.core} {:fixed-arities #{1}, :name name, :filename "src/mranderson/util.clj", :from mranderson.util, :col 8, :from-var sym->file-name, :arity 1, :row 32, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/util.clj", :from mranderson.util, :col 8, :from-var sym->file-name, :arity 3, :row 33, :to clojure.string} {:filename "src/mranderson/util.clj", :row 34, :col 24, :from mranderson.util, :to java.io, :name separator, :from-var sym->file-name} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/util.clj", :from mranderson.util, :col 8, :from-var sym->file-name, :arity 3, :row 34, :to clojure.string} {:name ->, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var sym->file-name, :arity 3, :varargs-min-arity 1, :row 32, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 30, :to clojure.core} {:fixed-arities #{1}, :name sym->file-name, :filename "src/mranderson/util.clj", :from mranderson.util, :col 28, :from-var relevant-clj-dep-path, :arity 1, :row 37, :to mranderson.util} {:fixed-arities #{2}, :name ends-with?, :filename "src/mranderson/util.clj", :from mranderson.util, :col 14, :from-var relevant-clj-dep-path, :arity 2, :row 38, :to clojure.string} {:fixed-arities #{1}, :name re-pattern, :filename "src/mranderson/util.clj", :from mranderson.util, :col 36, :from-var relevant-clj-dep-path, :arity 1, :row 42, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/util.clj", :from mranderson.util, :col 25, :from-var relevant-clj-dep-path, :arity 2, :row 42, :to clojure.string} {:filename "src/mranderson/util.clj", :row 43, :col 24, :from mranderson.util, :to clojure.core, :name last, :arity 1, :from-var relevant-clj-dep-path} {:name ->, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 21, :from-var relevant-clj-dep-path, :arity 3, :varargs-min-arity 1, :row 41, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 16, :from-var relevant-clj-dep-path, :arity 3, :varargs-min-arity 1, :row 39, :to clojure.core} {:fixed-arities #{0 1 4 6 3 2 5}, :name vector, :filename "src/mranderson/util.clj", :from mranderson.util, :col 8, :from-var relevant-clj-dep-path, :arity 1, :varargs-min-arity 6, :row 39, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var relevant-clj-dep-path, :arity 2, :varargs-min-arity 1, :row 44, :to clojure.core} {:fixed-arities #{3 2}, :name if-not, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 6, :from-var relevant-clj-dep-path, :arity 3, :row 38, :to clojure.core} {:name let, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var relevant-clj-dep-path, :arity 2, :varargs-min-arity 1, :row 37, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 36, :to clojure.core} {:filename "src/mranderson/util.clj", :row 49, :col 34, :from mranderson.util, :to java.io, :name File, :from-var clojure-source-files} {:filename "src/mranderson/util.clj", :row 49, :col 15, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .getCanonicalFile, :arity 1, :from-var clojure-source-files} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name let*, :arity 2, :from-var clojure-source-files} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name fn*, :arity 2, :from-var clojure-source-files} {:fixed-arities #{1 2}, :name clojure-source-files-relative, :filename "src/mranderson/util.clj", :from mranderson.util, :col 8, :from-var clojure-source-files, :arity 1, :row 48, :to mranderson.util} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var clojure-source-files, :arity 2, :varargs-min-arity 4, :row 49, :to clojure.core} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var clojure-source-files, :arity 3, :varargs-min-arity 1, :row 47, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 46, :to clojure.core} {:filename "src/mranderson/util.clj", :row 57, :col 22, :from mranderson.util, :to java.io, :name File, :from-var class-files} {:filename "src/mranderson/util.clj", :row 57, :col 22, :from mranderson.util, :to java.io, :name File, :from-var class-files} {:filename "src/mranderson/util.clj", :row 58, :col 24, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .isFile, :arity 1, :from-var class-files} {:filename "src/mranderson/util.clj", :row 59, :col 35, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .getName, :arity 1, :from-var class-files} {:filename "src/mranderson/util.clj", :row 59, :col 24, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .endsWith, :arity 2, :from-var class-files} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 19, :from-var class-files, :arity 2, :varargs-min-arity 1, :row 58, :to clojure.core} {:name fn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 17, :from-var class-files, :arity 2, :varargs-min-arity 0, :row 57, :to clojure.core} {:filename "src/mranderson/util.clj", :row 56, :col 16, :from mranderson.util, :to clojure.core, :name file-seq, :fixed-arities #{1}, :from-var class-files} {:filename "src/mranderson/util.clj", :row 55, :col 18, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .isDirectory, :arity 1, :from-var class-files} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name let*, :arity 2, :from-var class-files} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name fn*, :arity 2, :from-var class-files} {:filename "src/mranderson/util.clj", :row 54, :col 11, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name .listFiles, :arity 1, :from-var class-files} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name let*, :arity 2, :from-var class-files} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name fn*, :arity 2, :from-var class-files} {:fixed-arities #{1 2}, :name file, :filename "src/mranderson/util.clj", :from mranderson.util, :col 8, :from-var class-files, :arity 1, :varargs-min-arity 2, :row 53, :to clojure.java.io} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var class-files, :arity 2, :row 55, :to clojure.core} {:fixed-arities #{1}, :name mapcat, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var class-files, :arity 2, :varargs-min-arity 1, :row 56, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var class-files, :arity 2, :row 57, :to clojure.core} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var class-files, :arity 6, :varargs-min-arity 1, :row 52, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 51, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 12, :from-var class-file->fully-qualified-name, :arity 1, :varargs-min-arity 1, :row 63, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/util.clj", :from mranderson.util, :col 13, :from-var class-file->fully-qualified-name, :arity 2, :row 64, :to clojure.string} {:filename "src/mranderson/util.clj", :row 65, :col 12, :from mranderson.util, :to clojure.core, :name first, :arity 1, :from-var class-file->fully-qualified-name} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/util.clj", :from mranderson.util, :col 13, :from-var class-file->fully-qualified-name, :arity 2, :row 66, :to clojure.string} {:name ->, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 9, :from-var class-file->fully-qualified-name, :arity 5, :varargs-min-arity 1, :row 62, :to clojure.core} {:fixed-arities #{1 2}, :name drop, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var class-file->fully-qualified-name, :arity 2, :row 67, :to clojure.core} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var class-file->fully-qualified-name, :arity 2, :row 68, :to clojure.string} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var class-file->fully-qualified-name, :arity 3, :varargs-min-arity 1, :row 62, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 61, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var class-name->package-name, :arity 2, :row 71, :to clojure.string} {:filename "src/mranderson/util.clj", :row 72, :col 8, :from mranderson.util, :to clojure.core, :name butlast, :arity 1, :from-var class-name->package-name} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var class-name->package-name, :arity 2, :row 73, :to clojure.string} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var class-name->package-name, :arity 3, :varargs-min-arity 1, :row 71, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 70, :to clojure.core} {:filename "src/mranderson/util.clj", :row 82, :col 27, :from mranderson.util, :to clojure.core, :name conj, :from-var java-class-dirs} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/util.clj", :from mranderson.util, :col 19, :from-var java-class-dirs, :arity 2, :varargs-min-arity 4, :row 82, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 29, :from-var java-class-dirs, :arity 1, :varargs-min-arity 1, :row 78, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/util.clj", :from mranderson.util, :col 18, :from-var java-class-dirs, :arity 2, :row 78, :to clojure.string} {:fixed-arities #{1 2}, :name drop, :filename "src/mranderson/util.clj", :from mranderson.util, :col 18, :from-var java-class-dirs, :arity 2, :row 79, :to clojure.core} {:fixed-arities #{1 2}, :name take, :filename "src/mranderson/util.clj", :from mranderson.util, :col 18, :from-var java-class-dirs, :arity 2, :row 80, :to clojure.core} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/util.clj", :from mranderson.util, :col 18, :from-var java-class-dirs, :arity 2, :row 81, :to clojure.string} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 13, :from-var java-class-dirs, :arity 5, :varargs-min-arity 1, :row 78, :to clojure.core} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name let*, :arity 2, :from-var java-class-dirs} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name fn*, :arity 2, :from-var java-class-dirs} {:fixed-arities #{0}, :name class-files, :filename "src/mranderson/util.clj", :from mranderson.util, :col 43, :from-var java-class-dirs, :arity 0, :row 82, :to mranderson.util} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/util.clj", :from mranderson.util, :col 4, :from-var java-class-dirs, :arity 3, :row 78, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 75, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var clean-name-version, :arity 3, :row 86, :to clojure.string} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var clean-name-version, :arity 3, :row 87, :to clojure.string} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 4, :from-var clean-name-version, :arity 2, :varargs-min-arity 1, :row 86, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 84, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 10, :from-var first-src-path, :varargs-min-arity 1, :row 90, :to clojure.core} {:fixed-arities #{1}, :name count, :filename "src/mranderson/util.clj", :from mranderson.util, :col 26, :from-var first-src-path, :arity 1, :row 90, :to clojure.core} {:fixed-arities #{1}, :name inc, :filename "src/mranderson/util.clj", :from mranderson.util, :col 21, :from-var first-src-path, :arity 1, :row 90, :to clojure.core} {:filename "src/mranderson/util.clj", :row 90, :col 40, :from mranderson.util, :to clojure.core, :name first, :arity 1, :from-var first-src-path} {:fixed-arities #{1 2}, :name drop, :filename "src/mranderson/util.clj", :from mranderson.util, :col 15, :from-var first-src-path, :arity 2, :row 90, :to clojure.core} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/util.clj", :from mranderson.util, :col 4, :from-var first-src-path, :arity 2, :varargs-min-arity 5, :row 90, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 89, :to clojure.core} {:filename "src/mranderson/util.clj", :row 93, :col 42, :from mranderson.util, :to clojure.core, :name meta, :arity 1, :from-var source-dep?} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 6, :from-var source-dep?, :arity 2, :varargs-min-arity 1, :row 94, :to clojure.core} {:name let, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var source-dep?, :arity 2, :varargs-min-arity 1, :row 93, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 92, :to clojure.core} {:filename "src/mranderson/util.clj", :row 97, :col 15, :from mranderson.util, :to com.tonicsystems.jarjar, :name Rule, :from-var create-rule} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name new, :arity 1, :from-var create-rule} {:filename "src/mranderson/util.clj", :row 98, :col 13, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name setPattern, :from-var create-rule} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 25, :from-var create-rule, :arity 2, :varargs-min-arity 1, :row 98, :to clojure.core} {:filename "src/mranderson/util.clj", :row 98, :col 6, :from mranderson.util, :to clojure.core, :name ., :arity 3, :from-var create-rule} {:filename "src/mranderson/util.clj", :row 99, :col 13, :from mranderson.util, :to :clj-kondo/unknown-namespace, :name setResult, :from-var create-rule} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 24, :from-var create-rule, :arity 4, :varargs-min-arity 1, :row 99, :to clojure.core} {:filename "src/mranderson/util.clj", :row 99, :col 6, :from mranderson.util, :to clojure.core, :name ., :arity 3, :from-var create-rule} {:name let, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var create-rule, :arity 4, :varargs-min-arity 1, :row 97, :to clojure.core} {:name defn-, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 96, :to clojure.core} {:filename "src/mranderson/util.clj", :row 103, :col 10, :from mranderson.util, :to leiningen.core.main, :name warn, :from-var warn} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/util.clj", :from mranderson.util, :col 4, :from-var warn, :arity 2, :varargs-min-arity 5, :row 103, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 102, :to clojure.core} {:filename "src/mranderson/util.clj", :row 106, :col 10, :from mranderson.util, :to leiningen.core.main, :name info, :from-var info} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/util.clj", :from mranderson.util, :col 4, :from-var info, :arity 2, :varargs-min-arity 5, :row 106, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 105, :to clojure.core} {:filename "src/mranderson/util.clj", :row 109, :col 10, :from mranderson.util, :to leiningen.core.main, :name debug, :from-var debug} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/util.clj", :from mranderson.util, :col 4, :from-var debug, :arity 2, :varargs-min-arity 5, :row 109, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 108, :to clojure.core} {:fixed-arities #{0}, :name java-class-dirs, :filename "src/mranderson/util.clj", :from mranderson.util, :col 20, :from-var apply-jarjar!, :arity 0, :row 112, :to mranderson.util} {:fixed-arities #{2}, :name clean-name-version, :filename "src/mranderson/util.clj", :from mranderson.util, :col 23, :from-var apply-jarjar!, :arity 2, :row 113, :to mranderson.util} {:fixed-arities #{2}, :private true, :name create-rule, :filename "src/mranderson/util.clj", :from mranderson.util, :col 29, :from-var apply-jarjar!, :row 114, :to mranderson.util} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/util.clj", :from mranderson.util, :col 21, :from-var apply-jarjar!, :arity 2, :varargs-min-arity 4, :row 114, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/util.clj", :from mranderson.util, :col 16, :from-var apply-jarjar!, :arity 2, :varargs-min-arity 4, :row 114, :to clojure.core} {:filename "src/mranderson/util.clj", :row 115, :col 20, :from mranderson.util, :to mranderson.util, :name JjMainProcessor, :from-var apply-jarjar!} {:filename "src/mranderson/util.clj", :row nil, :col nil, :from mranderson.util, :to clojure.core, :name new, :arity 4, :from-var apply-jarjar!} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 28, :from-var apply-jarjar!, :arity 1, :varargs-min-arity 1, :row 116, :to clojure.core} {:fixed-arities #{1 2}, :name file, :filename "src/mranderson/util.clj", :from mranderson.util, :col 19, :from-var apply-jarjar!, :arity 1, :varargs-min-arity 2, :row 116, :to clojure.java.io} {:name format, :filename "src/mranderson/util.clj", :from mranderson.util, :col 12, :from-var apply-jarjar!, :arity 3, :varargs-min-arity 1, :row 117, :to clojure.core} {:name info, :filename "src/mranderson/util.clj", :from mranderson.util, :col 6, :from-var apply-jarjar!, :arity 1, :varargs-min-arity 0, :row 117, :to mranderson.util} {:filename "src/mranderson/util.clj", :row 118, :col 6, :from mranderson.util, :to com.tonicsystems.jarjar.ext_util, :name run, :arity 3, :from-var apply-jarjar!} {:name let, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var apply-jarjar!, :arity 3, :varargs-min-arity 1, :row 112, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 111, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 20, :from-var remove-2parents, :arity 1, :varargs-min-arity 1, :row 121, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var remove-2parents, :arity 2, :row 121, :to clojure.string} {:fixed-arities #{1 2}, :name drop, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var remove-2parents, :arity 2, :row 122, :to clojure.core} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var remove-2parents, :arity 2, :row 123, :to clojure.string} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var remove-2parents, :arity 3, :varargs-min-arity 1, :row 121, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 120, :to clojure.core} {:fixed-arities #{1 2}, :name resource, :filename "src/mranderson/util.clj", :from mranderson.util, :col 16, :from-var mranderson-version, :arity 1, :row 126, :to clojure.java.io} {:name slurp, :filename "src/mranderson/util.clj", :from mranderson.util, :col 15, :from-var mranderson-version, :arity 1, :varargs-min-arity 1, :row 127, :to clojure.core} {:fixed-arities #{1 2}, :name read-string, :filename "src/mranderson/util.clj", :from mranderson.util, :col 15, :from-var mranderson-version, :arity 1, :row 128, :to clojure.core} {:fixed-arities #{3 2}, :name nth, :filename "src/mranderson/util.clj", :from mranderson.util, :col 16, :from-var mranderson-version, :arity 2, :row 129, :to clojure.core} {:name ->, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 12, :from-var mranderson-version, :arity 4, :varargs-min-arity 1, :row 126, :to clojure.core} {:filename "src/mranderson/util.clj", :row 130, :col 14, :from mranderson.util, :to clojure.core, :name string?, :arity 1, :from-var mranderson-version} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 14, :from-var mranderson-version, :arity 2, :varargs-min-arity 1, :row 131, :to clojure.core} {:fixed-arities #{1 2}, :name assert, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 6, :from-var mranderson-version, :arity 2, :row 130, :to clojure.core} {:name let, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var mranderson-version, :arity 3, :varargs-min-arity 1, :row 126, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 125, :to clojure.core} {:fixed-arities #{1 2}, :name re-find, :filename "src/mranderson/util.clj", :from mranderson.util, :col 4, :from-var file->extension, :arity 2, :row 136, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 134, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 19, :from-var extension->platform, :varargs-min-arity 1, :row 142, :to clojure.core} {:filename "src/mranderson/util.clj", :row 141, :col 12, :from mranderson.util, :to clojure.core, :name rest, :arity 1, :from-var extension->platform} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/util.clj", :from mranderson.util, :col 13, :from-var extension->platform, :arity 2, :varargs-min-arity 5, :row 142, :to clojure.core} {:fixed-arities #{1 2}, :name keyword, :filename "src/mranderson/util.clj", :from mranderson.util, :col 12, :from-var extension->platform, :arity 1, :row 143, :to clojure.core} {:name some->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var extension->platform, :arity 4, :varargs-min-arity 1, :row 140, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 138, :to clojure.core} {:fixed-arities #{1 2}, :name difference, :filename "src/mranderson/util.clj", :from mranderson.util, :col 12, :from-var platform-comp, :arity 2, :varargs-min-arity 2, :row 148, :to clojure.set} {:filename "src/mranderson/util.clj", :row 149, :col 11, :from mranderson.util, :to clojure.core, :name first, :arity 1, :from-var platform-comp} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 6, :from-var platform-comp, :arity 3, :varargs-min-arity 1, :row 147, :to clojure.core} {:name when, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var platform-comp, :arity 2, :varargs-min-arity 1, :row 146, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 145, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var cljfile->dir, :arity 2, :row 152, :to clojure.string} {:filename "src/mranderson/util.clj", :row 153, :col 8, :from mranderson.util, :to clojure.core, :name butlast, :arity 1, :from-var cljfile->dir} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var cljfile->dir, :arity 2, :row 154, :to clojure.string} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var cljfile->dir, :arity 3, :varargs-min-arity 1, :row 152, :to clojure.core} {:name defn-, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 151, :to clojure.core} {:filename "src/mranderson/util.clj", :row 159, :col 34, :from mranderson.util, :to clojure.core, :name last, :arity 1, :from-var remove-subdirs} {:fixed-arities #{2}, :name includes?, :filename "src/mranderson/util.clj", :from mranderson.util, :col 39, :from-var remove-subdirs, :arity 2, :row 160, :to clojure.string} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 25, :from-var remove-subdirs, :arity 2, :varargs-min-arity 1, :row 160, :to clojure.core} {:filename "src/mranderson/util.clj", :row 162, :col 23, :from mranderson.util, :to clojure.core, :name conj, :arity 2, :from-var remove-subdirs} {:filename "src/mranderson/util.clj", :row 160, :col 21, :from mranderson.util, :to clojure.core, :name if, :arity 3, :from-var remove-subdirs} {:name let, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 19, :from-var remove-subdirs, :arity 2, :varargs-min-arity 1, :row 159, :to clojure.core} {:name fn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 17, :from-var remove-subdirs, :arity 2, :varargs-min-arity 0, :row 158, :to clojure.core} {:fixed-arities #{1 2}, :name sort, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var remove-subdirs, :arity 1, :row 157, :to clojure.core} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var remove-subdirs, :arity 3, :row 158, :to clojure.core} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var remove-subdirs, :arity 2, :varargs-min-arity 1, :row 157, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 156, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/util.clj", :from mranderson.util, :col 28, :from-var clj-files->dirs, :arity 3, :varargs-min-arity 1, :row 168, :to clojure.core} {:name fn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 14, :from-var clj-files->dirs, :arity 2, :varargs-min-arity 0, :row 168, :to clojure.core} {:filename "src/mranderson/util.clj", :row 167, :col 16, :from mranderson.util, :to clojure.string, :name blank?, :fixed-arities #{1}, :from-var clj-files->dirs} {:fixed-arities #{1}, :private true, :name cljfile->dir, :filename "src/mranderson/util.clj", :from mranderson.util, :col 13, :from-var clj-files->dirs, :row 166, :to mranderson.util} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var clj-files->dirs, :arity 2, :varargs-min-arity 4, :row 166, :to clojure.core} {:fixed-arities #{1 2}, :name remove, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var clj-files->dirs, :arity 2, :row 167, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/util.clj", :from mranderson.util, :col 9, :from-var clj-files->dirs, :arity 2, :varargs-min-arity 4, :row 168, :to clojure.core} {:fixed-arities #{1}, :name set, :filename "src/mranderson/util.clj", :from mranderson.util, :col 8, :from-var clj-files->dirs, :arity 1, :row 169, :to clojure.core} {:name ->>, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 4, :from-var clj-files->dirs, :arity 4, :varargs-min-arity 1, :row 166, :to clojure.core} {:name defn, :filename "src/mranderson/util.clj", :from mranderson.util, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 164, :to clojure.core} {:fixed-arities #{1}, :name inc, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 32, :from-var walk-deps, :arity 1, :row 10, :to clojure.core} {:fixed-arities #{3 2}, :name walk-deps, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 11, :from-var walk-deps, :arity 3, :row 10, :to mranderson.dependency.tree} {:name when, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 9, :from-var walk-deps, :arity 2, :varargs-min-arity 1, :row 9, :to clojure.core} {:name doseq, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 7, :from-var walk-deps, :arity 3, :varargs-min-arity 1, :row 7, :to clojure.core} {:fixed-arities #{3 2}, :name walk-deps, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 5, :from-var walk-deps, :arity 3, :row 12, :to mranderson.dependency.tree} {:name defn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 5, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 15, :col 20, :from mranderson.dependency.tree, :to clojure.core, :name first, :arity 1, :from-var path-pred} {:filename "src/mranderson/dependency/tree.clj", :row 15, :col 9, :from mranderson.dependency.tree, :to clojure.core, :name conj, :arity 2, :from-var path-pred} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 4, :from-var path-pred, :arity 2, :varargs-min-arity 2, :row 15, :to clojure.core} {:name defn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 14, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 36, :col 73, :from mranderson.dependency.tree, :to mranderson.dependency.tree, :name path-pred, :fixed-arities #{3}, :from-var walk&expand-deps} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 65, :from-var walk&expand-deps, :arity 3, :varargs-min-arity 4, :row 36, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 36, :col 93, :from mranderson.dependency.tree, :to clojure.core, :name key, :fixed-arities #{1}, :from-var walk&expand-deps} {:fixed-arities #{0 1 2}, :name comp, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 59, :from-var walk&expand-deps, :arity 2, :varargs-min-arity 2, :row 36, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 51, :from-var walk&expand-deps, :arity 2, :row 36, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 36, :col 44, :from mranderson.dependency.tree, :to clojure.core, :name first, :arity 1, :from-var walk&expand-deps} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 57, :from-var walk&expand-deps, :arity 2, :varargs-min-arity 1, :row 37, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 37, :col 33, :from mranderson.dependency.tree, :to clojure.core, :name first, :arity 1, :from-var walk&expand-deps} {:filename "src/mranderson/dependency/tree.clj", :row 39, :col 22, :from mranderson.dependency.tree, :to clojure.core, :name seq, :arity 1, :from-var walk&expand-deps} {:filename "src/mranderson/dependency/tree.clj", :row 40, :col 80, :from mranderson.dependency.tree, :to clojure.core, :name first, :arity 1, :from-var walk&expand-deps} {:filename "src/mranderson/dependency/tree.clj", :row 40, :col 69, :from mranderson.dependency.tree, :to clojure.core, :name conj, :arity 2, :from-var walk&expand-deps} {:fixed-arities #{4 3}, :name walk&expand-deps, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 18, :from-var walk&expand-deps, :arity 4, :row 40, :to mranderson.dependency.tree} {:name when, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 16, :from-var walk&expand-deps, :arity 2, :varargs-min-arity 1, :row 39, :to clojure.core} {:name let, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 13, :from-var walk&expand-deps, :arity 2, :varargs-min-arity 1, :row 36, :to clojure.core} {:name fn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 11, :from-var walk&expand-deps, :arity 2, :varargs-min-arity 0, :row 35, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 10, :from-var walk&expand-deps, :arity 2, :varargs-min-arity 4, :row 34, :to clojure.core} {:fixed-arities #{0 1 3 2}, :name into, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 10, :from-var walk&expand-deps, :arity 2, :row 42, :to clojure.core} {:name ->>, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 5, :from-var walk&expand-deps, :arity 2, :varargs-min-arity 1, :row 34, :to clojure.core} {:fixed-arities #{4 3}, :name walk&expand-deps, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 7, :from-var walk&expand-deps, :arity 4, :row 44, :to mranderson.dependency.tree} {:name defn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 17, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 55, :col 53, :from mranderson.dependency.tree, :to clojure.core, :name ffirst, :from-var evict-subtrees} {:fixed-arities #{0 1 2}, :name comp, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 34, :from-var evict-subtrees, :arity 2, :varargs-min-arity 2, :row 55, :to clojure.core} {:fixed-arities #{1 2}, :name remove, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 26, :from-var evict-subtrees, :arity 2, :row 55, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 56, :col 25, :from mranderson.dependency.tree, :to clojure.core, :name seq, :arity 1, :from-var evict-subtrees} {:fixed-arities #{2}, :name evict-subtrees, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 39, :from-var evict-subtrees, :arity 2, :row 56, :to mranderson.dependency.tree} {:name when, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 19, :from-var evict-subtrees, :arity 2, :varargs-min-arity 1, :row 56, :to clojure.core} {:name let, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 12, :from-var evict-subtrees, :arity 2, :varargs-min-arity 1, :row 55, :to clojure.core} {:name fn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 10, :from-var evict-subtrees, :arity 2, :varargs-min-arity 0, :row 54, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 9, :from-var evict-subtrees, :arity 2, :varargs-min-arity 4, :row 53, :to clojure.core} {:fixed-arities #{0 1 3 2}, :name into, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 9, :from-var evict-subtrees, :arity 2, :row 58, :to clojure.core} {:name ->>, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 4, :from-var evict-subtrees, :arity 2, :varargs-min-arity 1, :row 53, :to clojure.core} {:name defn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 46, :to clojure.core} {:fixed-arities #{5}, :name walk-dep-tree, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 10, :from-var walk-dep-tree, :arity 5, :row 70, :to mranderson.dependency.tree} {:name when, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 8, :from-var walk-dep-tree, :arity 2, :varargs-min-arity 1, :row 69, :to clojure.core} {:name let, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 6, :from-var walk-dep-tree, :arity 3, :varargs-min-arity 1, :row 68, :to clojure.core} {:name doseq, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 4, :from-var walk-dep-tree, :arity 2, :varargs-min-arity 1, :row 67, :to clojure.core} {:name defn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 60, :to clojure.core} {:fixed-arities #{0 1 2}, :name concat, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 99, :from-var walk-ordered-deps, :varargs-min-arity 2, :row 83, :to clojure.core} {:fixed-arities #{4 6 3 5}, :name update, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 69, :from-var walk-ordered-deps, :arity 4, :varargs-min-arity 6, :row 83, :to clojure.core} {:name fn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 24, :from-var walk-ordered-deps, :arity 2, :varargs-min-arity 0, :row 83, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 19, :from-var walk-ordered-deps, :arity 2, :varargs-min-arity 4, :row 83, :to clojure.core} {:fixed-arities #{1 2}, :name dorun, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 12, :from-var walk-ordered-deps, :arity 1, :row 83, :to clojure.core} {:name fn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 10, :from-var walk-ordered-deps, :arity 2, :varargs-min-arity 0, :row 82, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 81, :col 24, :from mranderson.dependency.tree, :to clojure.core, :name reduce, :fixed-arities #{3 2}, :from-var walk-ordered-deps} {:fixed-arities #{0 1 3 2}, :name into, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 77, :from-var walk-ordered-deps, :arity 2, :row 81, :to clojure.core} {:name fn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 32, :from-var walk-ordered-deps, :arity 2, :varargs-min-arity 0, :row 81, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 16, :from-var walk-ordered-deps, :arity 3, :varargs-min-arity 4, :row 81, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 81, :col 113, :from mranderson.dependency.tree, :to clojure.core, :name reverse, :fixed-arities #{1}, :from-var walk-ordered-deps} {:fixed-arities #{1 3 2}, :name juxt, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 10, :from-var walk-ordered-deps, :arity 2, :varargs-min-arity 3, :row 81, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 14, :from-var walk-ordered-deps, :arity 3, :varargs-min-arity 4, :row 80, :to clojure.core} {:fixed-arities #{1}, :name keys, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 9, :from-var walk-ordered-deps, :arity 1, :row 79, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 9, :from-var walk-ordered-deps, :arity 2, :varargs-min-arity 4, :row 80, :to clojure.core} {:name ->>, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 4, :from-var walk-ordered-deps, :arity 4, :varargs-min-arity 1, :row 79, :to clojure.core} {:name defn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 73, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 90, :col 61, :from mranderson.dependency.tree, :to clojure.core, :name ffirst, :arity 1, :from-var create-dep-graph} {:filename "src/mranderson/dependency/tree.clj", :row 90, :col 73, :from mranderson.dependency.tree, :to clojure.core, :name first, :arity 1, :from-var create-dep-graph} {:filename "src/mranderson/dependency/tree.clj", :row 90, :col 47, :from mranderson.dependency.tree, :to clojure.tools.namespace.dependency, :name depend, :arity 3, :from-var create-dep-graph} {:name fn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 36, :from-var create-dep-graph, :arity 2, :varargs-min-arity 0, :row 90, :to clojure.core} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 28, :from-var create-dep-graph, :arity 3, :row 90, :to clojure.core} {:fixed-arities #{1}, :name inc, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 110, :from-var create-dep-graph, :arity 1, :row 90, :to clojure.core} {:fixed-arities #{1 3}, :private true, :name create-dep-graph, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 10, :from-var create-dep-graph, :arity 3, :row 90, :to mranderson.dependency.tree} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 14, :from-var create-dep-graph, :arity 2, :varargs-min-arity 2, :row 91, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 92, :col 34, :from mranderson.dependency.tree, :to clojure.core, :name first, :arity 1, :from-var create-dep-graph} {:filename "src/mranderson/dependency/tree.clj", :row 92, :col 12, :from mranderson.dependency.tree, :to clojure.tools.namespace.dependency, :name depend, :arity 3, :from-var create-dep-graph} {:filename "src/mranderson/dependency/tree.clj", :row 91, :col 10, :from mranderson.dependency.tree, :to clojure.core, :name if, :arity 3, :from-var create-dep-graph} {:filename "src/mranderson/dependency/tree.clj", :row 89, :col 8, :from mranderson.dependency.tree, :to clojure.core, :name if, :arity 3, :from-var create-dep-graph} {:name fn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 6, :from-var create-dep-graph, :arity 2, :varargs-min-arity 0, :row 88, :to clojure.core} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 5, :from-var create-dep-graph, :arity 3, :row 87, :to clojure.core} {:filename "src/mranderson/dependency/tree.clj", :row 97, :col 23, :from mranderson.dependency.tree, :to clojure.tools.namespace.dependency, :name graph, :arity 0, :from-var create-dep-graph} {:fixed-arities #{1 3}, :private true, :name create-dep-graph, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 5, :from-var create-dep-graph, :arity 3, :row 97, :to mranderson.dependency.tree} {:name defn-, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 85, :to clojure.core} {:fixed-arities #{1 3}, :private true, :name create-dep-graph, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 27, :from-var topological-order, :arity 1, :row 100, :to mranderson.dependency.tree} {:filename "src/mranderson/dependency/tree.clj", :row 100, :col 12, :from mranderson.dependency.tree, :to clojure.tools.namespace.dependency, :name topo-sort, :arity 1, :from-var topological-order} {:fixed-arities #{0 1 3 2}, :name range, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 56, :from-var topological-order, :arity 0, :row 100, :to clojure.core} {:fixed-arities #{2}, :name zipmap, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :col 4, :from-var topological-order, :arity 2, :row 100, :to clojure.core} {:name defn, :filename "src/mranderson/dependency/tree.clj", :from mranderson.dependency.tree, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 99, :to clojure.core} {:filename "src/mranderson/dependency/resolver.clj", :row 8, :col 9, :from mranderson.dependency.resolver, :to cemerick.pomegranate.aether, :name resolve-dependencies, :arity 4, :from-var resolve-source-deps} {:filename "src/mranderson/dependency/resolver.clj", :row 9, :col 9, :from mranderson.dependency.resolver, :to cemerick.pomegranate.aether, :name dependency-hierarchy, :arity 2, :from-var resolve-source-deps} {:name ->>, :filename "src/mranderson/dependency/resolver.clj", :from mranderson.dependency.resolver, :macro true, :col 4, :from-var resolve-source-deps, :arity 2, :varargs-min-arity 1, :row 8, :to clojure.core} {:name defn, :filename "src/mranderson/dependency/resolver.clj", :from mranderson.dependency.resolver, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 5, :to clojure.core} {:fixed-arities #{1}, :name keys, :filename "src/mranderson/dependency/resolver.clj", :from mranderson.dependency.resolver, :col 13, :from-var expand-dep-hierarchy, :arity 1, :row 17, :to clojure.core} {:fixed-arities #{1 2}, :name repeat, :filename "src/mranderson/dependency/resolver.clj", :from mranderson.dependency.resolver, :col 34, :from-var expand-dep-hierarchy, :arity 1, :row 17, :to clojure.core} {:fixed-arities #{2}, :name zipmap, :filename "src/mranderson/dependency/resolver.clj", :from mranderson.dependency.resolver, :col 5, :from-var expand-dep-hierarchy, :arity 2, :row 17, :to clojure.core} {:filename "src/mranderson/dependency/resolver.clj", :row 18, :col 13, :from mranderson.dependency.resolver, :to mranderson.dependency.resolver, :name resolve-source-deps, :fixed-arities #{2}, :from-var expand-dep-hierarchy} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/dependency/resolver.clj", :from mranderson.dependency.resolver, :col 5, :from-var expand-dep-hierarchy, :arity 2, :varargs-min-arity 4, :row 18, :to clojure.core} {:fixed-arities #{4 3}, :name walk&expand-deps, :filename "src/mranderson/dependency/resolver.clj", :from mranderson.dependency.resolver, :col 4, :from-var expand-dep-hierarchy, :arity 3, :row 16, :to mranderson.dependency.tree} {:name defn, :filename "src/mranderson/dependency/resolver.clj", :from mranderson.dependency.resolver, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 11, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 18, :from-var print-dep, :varargs-min-arity 1, :row 15, :to clojure.core} {:fixed-arities #{0 1 2}, :name *, :filename "src/mranderson/core.clj", :from mranderson.core, :col 31, :from-var print-dep, :arity 2, :varargs-min-arity 2, :row 15, :to clojure.core} {:fixed-arities #{1 2}, :name repeat, :filename "src/mranderson/core.clj", :from mranderson.core, :col 23, :from-var print-dep, :arity 2, :row 15, :to clojure.core} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/core.clj", :from mranderson.core, :col 12, :from-var print-dep, :arity 2, :varargs-min-arity 5, :row 15, :to clojure.core} {:name pr-str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 52, :from-var print-dep, :arity 1, :varargs-min-arity 0, :row 15, :to clojure.core} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 4, :from-var print-dep, :arity 2, :varargs-min-arity 0, :row 15, :to mranderson.util} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 14, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 40, :from-var zip-target-file, :arity 1, :varargs-min-arity 1, :row 19, :to clojure.core} {:fixed-arities #{3}, :name replace-first, :filename "src/mranderson/core.clj", :from mranderson.core, :col 21, :from-var zip-target-file, :arity 3, :row 19, :to clojure.string} {:filename "src/mranderson/core.clj", :row 20, :col 6, :from mranderson.core, :to me.raynes.fs, :name file, :arity 2, :from-var zip-target-file} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var zip-target-file, :arity 2, :varargs-min-arity 1, :row 19, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 17, :to clojure.core} {:fixed-arities #{1}, :name name, :filename "src/mranderson/core.clj", :from mranderson.core, :col 19, :from-var unzip, :arity 1, :row 25, :to clojure.core} {:fixed-arities #{1 2}, :private true, :name unzip, :filename "src/mranderson/core.clj", :from mranderson.core, :col 5, :from-var unzip, :arity 2, :row 25, :to mranderson.core} {:filename "src/mranderson/core.clj", :row 27, :col 15, :from mranderson.core, :to java.util.zip, :name ZipFile, :from-var unzip} {:filename "src/mranderson/core.clj", :row 27, :col 25, :from mranderson.core, :to me.raynes.fs, :name file, :arity 1, :from-var unzip} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name new, :arity 2, :from-var unzip} {:filename "src/mranderson/core.clj", :row 28, :col 36, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .entries, :arity 1, :from-var unzip} {:fixed-arities #{1}, :name enumeration-seq, :filename "src/mranderson/core.clj", :from mranderson.core, :col 19, :from-var unzip, :arity 1, :row 28, :to clojure.core} {:filename "src/mranderson/core.clj", :row 29, :col 38, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name java.util.zip.ZipEntry, :from-var unzip} {:filename "src/mranderson/core.clj", :row 29, :col 38, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name java.util.zip.ZipEntry, :from-var unzip} {:filename "src/mranderson/core.clj", :row 30, :col 33, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .isDirectory, :arity 1, :from-var unzip} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 48, :from-var unzip, :arity 1, :varargs-min-arity 1, :row 31, :to clojure.core} {:fixed-arities #{2}, :name includes?, :filename "src/mranderson/core.clj", :from mranderson.core, :col 33, :from-var unzip, :arity 2, :row 31, :to clojure.string} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 29, :from-var unzip, :arity 2, :varargs-min-arity 1, :row 30, :to clojure.core} {:fixed-arities #{1}, :name not, :filename "src/mranderson/core.clj", :from mranderson.core, :col 24, :from-var unzip, :arity 1, :row 30, :to clojure.core} {:name fn, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 22, :from-var unzip, :arity 3, :varargs-min-arity 0, :row 29, :to clojure.core} {:fixed-arities #{2}, :private true, :name zip-target-file, :filename "src/mranderson/core.clj", :from mranderson.core, :col 24, :from-var unzip, :arity 2, :row 34, :to mranderson.core} {:filename "src/mranderson/core.clj", :row 35, :col 20, :from mranderson.core, :to me.raynes.fs, :name parent, :arity 1, :from-var unzip} {:filename "src/mranderson/core.clj", :row 35, :col 9, :from mranderson.core, :to me.raynes.fs, :name mkdirs, :arity 1, :from-var unzip} {:filename "src/mranderson/core.clj", :row 36, :col 18, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .getInputStream, :arity 2, :from-var unzip} {:name copy, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var unzip, :arity 2, :varargs-min-arity 2, :row 36, :to clojure.java.io} {:name doseq, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 7, :from-var unzip, :arity 3, :varargs-min-arity 1, :row 32, :to clojure.core} {:filename "src/mranderson/core.clj", :row 40, :col 25, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .endsWith, :arity 2, :from-var unzip} {:filename "src/mranderson/core.clj", :row 41, :col 25, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .endsWith, :arity 2, :from-var unzip} {:filename "src/mranderson/core.clj", :row 42, :col 25, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .endsWith, :arity 2, :from-var unzip} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 21, :from-var unzip, :arity 3, :varargs-min-arity 1, :row 40, :to clojure.core} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var unzip} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var unzip} {:filename "src/mranderson/core.clj", :row 39, :col 18, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .getName, :arity 1, :from-var unzip} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var unzip} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var unzip} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/core.clj", :from mranderson.core, :col 12, :from-var unzip, :arity 2, :row 38, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 12, :from-var unzip, :arity 2, :varargs-min-arity 4, :row 39, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/core.clj", :from mranderson.core, :col 12, :from-var unzip, :arity 2, :row 40, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 7, :from-var unzip, :arity 4, :varargs-min-arity 1, :row 37, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 5, :from-var unzip, :arity 3, :varargs-min-arity 1, :row 27, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 22, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var cljfile->prefix, :arity 2, :row 45, :to clojure.string} {:filename "src/mranderson/core.clj", :row 46, :col 8, :from mranderson.core, :to clojure.core, :name butlast, :arity 1, :from-var cljfile->prefix} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var cljfile->prefix, :arity 2, :row 47, :to clojure.string} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var cljfile->prefix, :arity 3, :varargs-min-arity 1, :row 45, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 44, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 15, :from-var possible-prefixes, :arity 3, :row 57, :to clojure.string} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var possible-prefixes} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var possible-prefixes} {:filename "src/mranderson/core.clj", :row 56, :col 13, :from mranderson.core, :to clojure.core, :name first, :from-var possible-prefixes} {:fixed-arities #{1}, :name inc, :filename "src/mranderson/core.clj", :from mranderson.core, :col 43, :from-var possible-prefixes, :arity 1, :row 54, :to clojure.core} {:filename "src/mranderson/core.clj", :row 54, :col 30, :from mranderson.core, :to clojure.core, :name assoc, :arity 3, :from-var possible-prefixes} {:filename "src/mranderson/core.clj", :row 54, :col 58, :from mranderson.core, :to clojure.core, :name assoc, :arity 3, :from-var possible-prefixes} {:filename "src/mranderson/core.clj", :row 54, :col 18, :from mranderson.core, :to clojure.core, :name if, :arity 3, :from-var possible-prefixes} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var possible-prefixes} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var possible-prefixes} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/core.clj", :from mranderson.core, :col 18, :from-var possible-prefixes, :arity 2, :varargs-min-arity 2, :row 53, :to clojure.core} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var possible-prefixes} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var possible-prefixes} {:fixed-arities #{1}, :name blank?, :filename "src/mranderson/core.clj", :from mranderson.core, :col 18, :from-var possible-prefixes, :arity 1, :row 52, :to clojure.string} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var possible-prefixes} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var possible-prefixes} {:fixed-arities #{1}, :private true, :name cljfile->prefix, :filename "src/mranderson/core.clj", :from mranderson.core, :col 13, :from-var possible-prefixes, :row 51, :to mranderson.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var possible-prefixes, :arity 2, :varargs-min-arity 4, :row 51, :to clojure.core} {:fixed-arities #{1 2}, :name remove, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var possible-prefixes, :arity 2, :row 52, :to clojure.core} {:fixed-arities #{1 2}, :name remove, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var possible-prefixes, :arity 2, :row 53, :to clojure.core} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var possible-prefixes, :arity 3, :row 54, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var possible-prefixes, :arity 2, :varargs-min-arity 4, :row 56, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var possible-prefixes, :arity 2, :varargs-min-arity 4, :row 57, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var possible-prefixes, :arity 7, :varargs-min-arity 1, :row 50, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 49, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 46, :from-var replacement-prefix, :arity 3, :row 67, :to clojure.string} {:filename "src/mranderson/core.clj", :row 67, :col 26, :from mranderson.core, :to clojure.core, :name if, :arity 3, :from-var replacement-prefix} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var replacement-prefix} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var replacement-prefix} {:fixed-arities #{1}, :name sym->file-name, :filename "src/mranderson/core.clj", :from mranderson.core, :col 43, :from-var replacement-prefix, :arity 1, :row 61, :to mranderson.util} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/core.clj", :from mranderson.core, :col 43, :from-var replacement-prefix, :arity 2, :row 62, :to clojure.string} {:filename "src/mranderson/core.clj", :row 63, :col 42, :from mranderson.core, :to clojure.core, :name last, :arity 1, :from-var replacement-prefix} {:name ->, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 39, :from-var replacement-prefix, :arity 3, :varargs-min-arity 1, :row 61, :to clojure.core} {:fixed-arities #{1 2}, :name not=, :filename "src/mranderson/core.clj", :from mranderson.core, :col 33, :from-var replacement-prefix, :arity 2, :varargs-min-arity 2, :row 61, :to clojure.core} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var replacement-prefix} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var replacement-prefix} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 31, :from-var replacement-prefix, :arity 1, :varargs-min-arity 1, :row 60, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/core.clj", :from mranderson.core, :col 20, :from-var replacement-prefix, :arity 2, :row 60, :to clojure.string} {:fixed-arities #{1 2}, :name drop-while, :filename "src/mranderson/core.clj", :from mranderson.core, :col 20, :from-var replacement-prefix, :arity 2, :row 61, :to clojure.core} {:filename "src/mranderson/core.clj", :row 65, :col 19, :from mranderson.core, :to clojure.core, :name rest, :arity 1, :from-var replacement-prefix} {:fixed-arities #{0 1 2}, :name concat, :filename "src/mranderson/core.clj", :from mranderson.core, :col 20, :from-var replacement-prefix, :arity 2, :varargs-min-arity 2, :row 66, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 20, :from-var replacement-prefix, :arity 2, :varargs-min-arity 4, :row 67, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 15, :from-var replacement-prefix, :arity 5, :varargs-min-arity 1, :row 60, :to clojure.core} {:fixed-arities #{0 1 2}, :name concat, :filename "src/mranderson/core.clj", :from mranderson.core, :col 11, :from-var replacement-prefix, :arity 2, :varargs-min-arity 2, :row 69, :to clojure.core} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/core.clj", :from mranderson.core, :col 11, :from-var replacement-prefix, :arity 2, :row 70, :to clojure.string} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var replacement-prefix, :arity 3, :varargs-min-arity 1, :row 68, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var replacement-prefix, :arity 2, :varargs-min-arity 1, :row 60, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 59, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var replacement, :arity 1, :varargs-min-arity 1, :row 75, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 15, :from-var replacement, :arity 3, :row 76, :to clojure.string} {:name ->, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 11, :from-var replacement, :arity 3, :varargs-min-arity 1, :row 74, :to clojure.core} {:filename "src/mranderson/core.clj", :row 73, :col 9, :from mranderson.core, :to clojure.core, :name if, :arity 3, :from-var replacement} {:fixed-arities #{0 1 4 6 3 2 5}, :name vector, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var replacement, :arity 1, :varargs-min-arity 6, :row 78, :to clojure.core} {:fixed-arities #{0 1 2}, :name concat, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var replacement, :arity 2, :varargs-min-arity 2, :row 79, :to clojure.core} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/core.clj", :from mranderson.core, :col 9, :from-var replacement, :arity 2, :row 80, :to clojure.string} {:fixed-arities #{1 2}, :name symbol, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var replacement, :arity 1, :row 81, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var replacement, :arity 5, :varargs-min-arity 1, :row 73, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 72, :to clojure.core} {:name slurp, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var update-path-in-file, :arity 1, :varargs-min-arity 1, :row 84, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var update-path-in-file, :arity 3, :row 85, :to clojure.string} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/core.clj", :from mranderson.core, :col 16, :from-var update-path-in-file, :arity 2, :varargs-min-arity 2, :row 86, :to clojure.core} {:name spit, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var update-path-in-file, :arity 2, :varargs-min-arity 2, :row 87, :to clojure.core} {:name when-not, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var update-path-in-file, :arity 2, :varargs-min-arity 1, :row 86, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var update-path-in-file, :arity 2, :varargs-min-arity 1, :row 84, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 83, :to clojure.core} {:filename "src/mranderson/core.clj", :row 90, :col 26, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .indexOf, :arity 2, :from-var import-fragment-left} {:fixed-arities #{1 2}, :name >, :filename "src/mranderson/core.clj", :from mranderson.core, :col 12, :from-var import-fragment-left, :arity 2, :varargs-min-arity 2, :row 91, :to clojure.core} {:fixed-arities #{1 2}, :name take, :filename "src/mranderson/core.clj", :from mranderson.core, :col 47, :from-var import-fragment-left, :arity 2, :row 92, :to clojure.core} {:fixed-arities #{1}, :name reverse, :filename "src/mranderson/core.clj", :from mranderson.core, :col 38, :from-var import-fragment-left, :arity 1, :row 92, :to clojure.core} {:filename "src/mranderson/core.clj", :row 94, :col 28, :from mranderson.core, :to clojure.core, :name first, :arity 1, :from-var import-fragment-left} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/core.clj", :from mranderson.core, :col 22, :from-var import-fragment-left, :arity 2, :varargs-min-arity 2, :row 94, :to clojure.core} {:fixed-arities #{1 2}, :name -, :filename "src/mranderson/core.clj", :from mranderson.core, :col 22, :from-var import-fragment-left, :arity 2, :varargs-min-arity 2, :row 95, :to clojure.core} {:filename "src/mranderson/core.clj", :row 97, :col 65, :from mranderson.core, :to clojure.core, :name first, :arity 1, :from-var import-fragment-left} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 71, :from-var import-fragment-left, :arity 1, :varargs-min-arity 1, :row 97, :to clojure.core} {:name ->, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 45, :from-var import-fragment-left, :arity 3, :varargs-min-arity 1, :row 97, :to clojure.core} {:fixed-arities #{2}, :name re-matches, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var import-fragment-left, :arity 2, :row 97, :to clojure.core} {:fixed-arities #{1}, :name not, :filename "src/mranderson/core.clj", :from mranderson.core, :col 22, :from-var import-fragment-left, :arity 1, :row 97, :to clojure.core} {:fixed-arities #{1}, :name count, :filename "src/mranderson/core.clj", :from mranderson.core, :col 22, :from-var import-fragment-left, :arity 1, :row 98, :to clojure.core} {:name cond, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 16, :from-var import-fragment-left, :arity 6, :varargs-min-arity 0, :row 94, :to clojure.core} {:name loop, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 14, :from-var import-fragment-left, :arity 2, :varargs-min-arity 1, :row 92, :to clojure.core} {:fixed-arities #{1 2}, :name drop, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var import-fragment-left, :arity 2, :row 92, :to clojure.core} {:name when, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var import-fragment-left, :arity 2, :varargs-min-arity 1, :row 91, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var import-fragment-left, :arity 2, :varargs-min-arity 1, :row 90, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 89, :to clojure.core} {:filename "src/mranderson/core.clj", :row 100, :col 31, :from mranderson.core, :to clojure.core, :name recur, :from-var import-fragment-left} {:filename "src/mranderson/core.clj", :row 100, :col 38, :from mranderson.core, :to clojure.core, :name rest, :arity 1, :from-var import-fragment-left} {:fixed-arities #{1}, :name inc, :filename "src/mranderson/core.clj", :from mranderson.core, :col 62, :from-var import-fragment-left, :arity 1, :row 100, :to clojure.core} {:filename "src/mranderson/core.clj", :row 100, :col 31, :from mranderson.core, :to clojure.core, :name recur, :arity 2, :from-var import-fragment-left} {:fixed-arities #{1}, :private true, :name import-fragment-left, :filename "src/mranderson/core.clj", :from mranderson.core, :col 31, :from-var import-fragment, :arity 1, :row 103, :to mranderson.core} {:fixed-arities #{1}, :name count, :filename "src/mranderson/core.clj", :from mranderson.core, :col 41, :from-var import-fragment, :arity 1, :row 104, :to clojure.core} {:fixed-arities #{1 2}, :name >, :filename "src/mranderson/core.clj", :from mranderson.core, :col 38, :from-var import-fragment, :arity 2, :varargs-min-arity 2, :row 104, :to clojure.core} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 12, :from-var import-fragment, :arity 2, :varargs-min-arity 1, :row 104, :to clojure.core} {:fixed-arities #{1 2}, :name >, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var import-fragment, :arity 2, :varargs-min-arity 2, :row 107, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 18, :from-var import-fragment, :varargs-min-arity 1, :row 108, :to clojure.core} {:fixed-arities #{1 2}, :name take, :filename "src/mranderson/core.clj", :from mranderson.core, :col 23, :from-var import-fragment, :arity 2, :row 108, :to clojure.core} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/core.clj", :from mranderson.core, :col 12, :from-var import-fragment, :arity 2, :varargs-min-arity 5, :row 108, :to clojure.core} {:filename "src/mranderson/core.clj", :row 109, :col 12, :from mranderson.core, :to clojure.core, :name recur, :from-var import-fragment} {:fixed-arities #{1}, :name inc, :filename "src/mranderson/core.clj", :from mranderson.core, :col 19, :from-var import-fragment, :arity 1, :row 109, :to clojure.core} {:fixed-arities #{3 2}, :name nth, :filename "src/mranderson/core.clj", :from mranderson.core, :col 43, :from-var import-fragment, :arity 2, :row 109, :to clojure.core} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/core.clj", :from mranderson.core, :col 37, :from-var import-fragment, :arity 2, :varargs-min-arity 2, :row 109, :to clojure.core} {:fixed-arities #{1}, :name dec, :filename "src/mranderson/core.clj", :from mranderson.core, :col 37, :from-var import-fragment, :arity 1, :row 110, :to clojure.core} {:fixed-arities #{3 2}, :name nth, :filename "src/mranderson/core.clj", :from mranderson.core, :col 43, :from-var import-fragment, :arity 2, :row 112, :to clojure.core} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/core.clj", :from mranderson.core, :col 37, :from-var import-fragment, :arity 2, :varargs-min-arity 2, :row 112, :to clojure.core} {:fixed-arities #{1}, :name inc, :filename "src/mranderson/core.clj", :from mranderson.core, :col 37, :from-var import-fragment, :arity 1, :row 113, :to clojure.core} {:name cond, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 31, :from-var import-fragment, :arity 6, :varargs-min-arity 0, :row 109, :to clojure.core} {:filename "src/mranderson/core.clj", :row 109, :col 12, :from mranderson.core, :to clojure.core, :name recur, :arity 2, :from-var import-fragment} {:filename "src/mranderson/core.clj", :row 107, :col 10, :from mranderson.core, :to clojure.core, :name if, :arity 3, :from-var import-fragment} {:name loop, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 8, :from-var import-fragment, :arity 2, :varargs-min-arity 1, :row 105, :to clojure.core} {:name when, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var import-fragment, :arity 2, :varargs-min-arity 1, :row 104, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var import-fragment, :arity 2, :varargs-min-arity 1, :row 103, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 102, :to clojure.core} {:filename "src/mranderson/core.clj", :row 118, :col 22, :from mranderson.core, :to me.raynes.fs, :name file, :arity 2, :from-var retrieve-import} {:name slurp, :filename "src/mranderson/core.clj", :from mranderson.core, :col 15, :from-var retrieve-import, :arity 1, :varargs-min-arity 1, :row 118, :to clojure.core} {:fixed-arities #{1}, :private true, :name import-fragment, :filename "src/mranderson/core.clj", :from mranderson.core, :col 26, :from-var retrieve-import, :arity 1, :row 119, :to mranderson.core} {:fixed-arities #{1}, :name blank?, :filename "src/mranderson/core.clj", :from mranderson.core, :col 16, :from-var retrieve-import, :arity 1, :row 120, :to clojure.string} {:name when-not, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var retrieve-import, :arity 2, :varargs-min-arity 1, :row 120, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var retrieve-import, :arity 2, :varargs-min-arity 1, :row 118, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 117, :to clojure.core} {:filename "src/mranderson/core.clj", :row 125, :col 20, :from mranderson.core, :to clojure.core, :name first, :arity 1, :from-var find-orig-import} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var find-orig-import, :arity 1, :varargs-min-arity 1, :row 126, :to clojure.core} {:filename "src/mranderson/core.clj", :row 126, :col 43, :from mranderson.core, :to clojure.core, :name first, :arity 1, :from-var find-orig-import} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 38, :from-var find-orig-import, :arity 1, :varargs-min-arity 1, :row 126, :to clojure.core} {:filename "src/mranderson/core.clj", :row 126, :col 16, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .endsWith, :arity 2, :from-var find-orig-import} {:filename "src/mranderson/core.clj", :row 127, :col 14, :from mranderson.core, :to clojure.core, :name second, :arity 1, :from-var find-orig-import} {:filename "src/mranderson/core.clj", :row 128, :col 14, :from mranderson.core, :to clojure.core, :name recur, :from-var find-orig-import} {:filename "src/mranderson/core.clj", :row 128, :col 21, :from mranderson.core, :to clojure.core, :name rest, :arity 1, :from-var find-orig-import} {:filename "src/mranderson/core.clj", :row 128, :col 14, :from mranderson.core, :to clojure.core, :name recur, :arity 1, :from-var find-orig-import} {:filename "src/mranderson/core.clj", :row 126, :col 12, :from mranderson.core, :to clojure.core, :name if, :arity 3, :from-var find-orig-import} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 10, :from-var find-orig-import, :arity 2, :varargs-min-arity 1, :row 125, :to clojure.core} {:name loop, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 8, :from-var find-orig-import, :arity 2, :varargs-min-arity 1, :row 124, :to clojure.core} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var find-orig-import, :arity 2, :varargs-min-arity 1, :row 124, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 123, :to clojure.core} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 4, :from-var class-deps-jar!, :arity 1, :varargs-min-arity 0, :row 133, :to mranderson.util} {:name output-stream, :filename "src/mranderson/core.clj", :from mranderson.core, :col 21, :from-var class-deps-jar!, :arity 1, :varargs-min-arity 1, :row 134, :to clojure.java.io} {:filename "src/mranderson/core.clj", :row 135, :col 20, :from mranderson.core, :to java.util.zip, :name ZipOutputStream, :from-var class-deps-jar!} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name new, :arity 2, :from-var class-deps-jar!} {:name writer, :filename "src/mranderson/core.clj", :from mranderson.core, :col 23, :from-var class-deps-jar!, :arity 1, :varargs-min-arity 1, :row 136, :to clojure.java.io} {:fixed-arities #{0}, :name class-files, :filename "src/mranderson/core.clj", :from mranderson.core, :col 24, :from-var class-deps-jar!, :arity 0, :row 137, :to mranderson.util} {:filename "src/mranderson/core.clj", :row 138, :col 17, :from mranderson.core, :to clojure.core, :name *out*, :from-var class-deps-jar!} {:name input-stream, :filename "src/mranderson/core.clj", :from mranderson.core, :col 30, :from-var class-deps-jar!, :arity 1, :varargs-min-arity 1, :row 140, :to clojure.java.io} {:filename "src/mranderson/core.clj", :row 141, :col 33, :from mranderson.core, :to java.util.zip, :name ZipEntry, :from-var class-deps-jar!} {:fixed-arities #{1}, :name remove-2parents, :filename "src/mranderson/core.clj", :from mranderson.core, :col 44, :from-var class-deps-jar!, :arity 1, :row 141, :to mranderson.util} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name new, :arity 2, :from-var class-deps-jar!} {:filename "src/mranderson/core.clj", :row 141, :col 14, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .putNextEntry, :arity 2, :from-var class-deps-jar!} {:name copy, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var class-deps-jar!, :arity 2, :varargs-min-arity 2, :row 142, :to clojure.java.io} {:fixed-arities #{0}, :name flush, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var class-deps-jar!, :arity 0, :row 143, :to clojure.core} {:filename "src/mranderson/core.clj", :row 144, :col 14, :from mranderson.core, :to :clj-kondo/unknown-namespace, :name .closeEntry, :arity 1, :from-var class-deps-jar!} {:name with-open, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 12, :from-var class-deps-jar!, :arity 5, :varargs-min-arity 1, :row 140, :to clojure.core} {:name doseq, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 10, :from-var class-deps-jar!, :arity 2, :varargs-min-arity 1, :row 139, :to clojure.core} {:name binding, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 8, :from-var class-deps-jar!, :arity 2, :varargs-min-arity 1, :row 138, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var class-deps-jar!, :arity 2, :varargs-min-arity 1, :row 137, :to clojure.core} {:name with-open, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var class-deps-jar!, :arity 2, :varargs-min-arity 1, :row 134, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 5, :varargs-min-arity 2, :row 130, :to clojure.core} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 4, :from-var replace-class-deps!, :arity 1, :varargs-min-arity 0, :row 147, :to mranderson.util} {:filename "src/mranderson/core.clj", :row 150, :col 31, :from mranderson.core, :to clojure.core, :name first, :from-var replace-class-deps!} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/core.clj", :from mranderson.core, :col 33, :from-var replace-class-deps!, :arity 2, :row 149, :to clojure.string} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var replace-class-deps!} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var replace-class-deps!} {:fixed-arities #{0}, :name java-class-dirs, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var replace-class-deps!, :arity 0, :row 148, :to mranderson.util} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var replace-class-deps!, :arity 2, :varargs-min-arity 4, :row 149, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var replace-class-deps!, :arity 2, :varargs-min-arity 4, :row 150, :to clojure.core} {:fixed-arities #{1}, :name set, :filename "src/mranderson/core.clj", :from mranderson.core, :col 26, :from-var replace-class-deps!, :arity 1, :row 151, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 22, :from-var replace-class-deps!, :arity 4, :varargs-min-arity 1, :row 148, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 21, :from-var replace-class-deps!, :arity 2, :varargs-min-arity 1, :row 152, :to clojure.core} {:filename "src/mranderson/core.clj", :row 152, :col 6, :from mranderson.core, :to me.raynes.fs, :name delete-dir, :arity 1, :from-var replace-class-deps!} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var replace-class-deps!, :arity 3, :varargs-min-arity 0, :row 153, :to mranderson.util} {:name doseq, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var replace-class-deps!, :arity 3, :varargs-min-arity 1, :row 148, :to clojure.core} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 4, :from-var replace-class-deps!, :arity 1, :varargs-min-arity 0, :row 154, :to mranderson.util} {:filename "src/mranderson/core.clj", :row 155, :col 11, :from mranderson.core, :to me.raynes.fs, :name file, :arity 1, :from-var replace-class-deps!} {:filename "src/mranderson/core.clj", :row 155, :col 45, :from mranderson.core, :to me.raynes.fs, :name file, :arity 1, :from-var replace-class-deps!} {:fixed-arities #{1 2}, :private true, :name unzip, :filename "src/mranderson/core.clj", :from mranderson.core, :col 4, :from-var replace-class-deps!, :arity 2, :row 155, :to mranderson.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 6, :varargs-min-arity 2, :row 146, :to clojure.core} {:filename "src/mranderson/core.clj", :row 158, :col 8, :from mranderson.core, :to clojure.core, :name seq, :arity 1, :from-var filter-clj-files} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 24, :from-var filter-clj-files, :varargs-min-arity 1, :row 161, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/core.clj", :from mranderson.core, :col 16, :from-var filter-clj-files, :arity 2, :varargs-min-arity 4, :row 161, :to clojure.core} {:filename "src/mranderson/core.clj", :row 160, :col 15, :from mranderson.core, :to clojure.core, :name first, :from-var filter-clj-files} {:fixed-arities #{2}, :name includes?, :filename "src/mranderson/core.clj", :from mranderson.core, :col 43, :from-var filter-clj-files, :arity 2, :row 159, :to clojure.string} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var filter-clj-files} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var filter-clj-files} {:fixed-arities #{2}, :name some, :filename "src/mranderson/core.clj", :from mranderson.core, :col 36, :from-var filter-clj-files, :arity 2, :row 159, :to clojure.core} {:name fn, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 19, :from-var filter-clj-files, :arity 2, :varargs-min-arity 0, :row 159, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/core.clj", :from mranderson.core, :col 11, :from-var filter-clj-files, :arity 2, :row 159, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 11, :from-var filter-clj-files, :arity 2, :varargs-min-arity 4, :row 160, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 11, :from-var filter-clj-files, :arity 2, :varargs-min-arity 4, :row 161, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var filter-clj-files, :arity 3, :varargs-min-arity 1, :row 159, :to clojure.core} {:filename "src/mranderson/core.clj", :row 158, :col 4, :from mranderson.core, :to clojure.core, :name if, :arity 3, :from-var filter-clj-files} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 157, :to clojure.core} {:fixed-arities #{2}, :name clean-name-version, :filename "src/mranderson/core.clj", :from mranderson.core, :col 31, :from-var prefix-dependency-imports!, :arity 2, :row 165, :to mranderson.util} {:filename "src/mranderson/core.clj", :row 166, :col 25, :from mranderson.core, :to clojure.core, :name first, :arity 1, :from-var prefix-dependency-imports!} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 25, :from-var prefix-dependency-imports!, :arity 3, :row 167, :to clojure.string} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 25, :from-var prefix-dependency-imports!, :arity 3, :row 168, :to clojure.string} {:name some->, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 17, :from-var prefix-dependency-imports!, :arity 3, :varargs-min-arity 1, :row 166, :to clojure.core} {:fixed-arities #{3}, :name relevant-clj-dep-path, :filename "src/mranderson/core.clj", :from mranderson.core, :col 23, :from-var prefix-dependency-imports!, :arity 3, :row 169, :to mranderson.util} {:fixed-arities #{1 2}, :name clojure-source-files-relative, :filename "src/mranderson/core.clj", :from mranderson.core, :col 20, :from-var prefix-dependency-imports!, :arity 1, :row 170, :to mranderson.util} {:filename "src/mranderson/core.clj", :row 173, :col 30, :from mranderson.core, :to clojure.core, :name nil?, :fixed-arities #{1}, :from-var prefix-dependency-imports!} {:fixed-arities #{1}, :name remove-2parents, :filename "src/mranderson/core.clj", :from mranderson.core, :col 66, :from-var prefix-dependency-imports!, :arity 1, :row 172, :to mranderson.util} {:fixed-arities #{2}, :private true, :name retrieve-import, :filename "src/mranderson/core.clj", :from mranderson.core, :col 41, :from-var prefix-dependency-imports!, :arity 2, :row 172, :to mranderson.core} {:filename "src/mranderson/core.clj", :row 172, :col 32, :from mranderson.core, :to clojure.core, :name conj, :arity 2, :from-var prefix-dependency-imports!} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var prefix-dependency-imports!} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var prefix-dependency-imports!} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/core.clj", :from mranderson.core, :col 23, :from-var prefix-dependency-imports!, :arity 3, :row 172, :to clojure.core} {:fixed-arities #{1 2}, :name remove, :filename "src/mranderson/core.clj", :from mranderson.core, :col 23, :from-var prefix-dependency-imports!, :arity 2, :row 173, :to clojure.core} {:fixed-arities #{1 2}, :name doall, :filename "src/mranderson/core.clj", :from mranderson.core, :col 22, :from-var prefix-dependency-imports!, :arity 1, :row 174, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 18, :from-var prefix-dependency-imports!, :arity 4, :varargs-min-arity 1, :row 171, :to clojure.core} {:filename "src/mranderson/core.clj", :row 175, :col 26, :from mranderson.core, :to mranderson.util, :name class-file->fully-qualified-name, :fixed-arities #{1}, :from-var prefix-dependency-imports!} {:fixed-arities #{0}, :name class-files, :filename "src/mranderson/core.clj", :from mranderson.core, :col 62, :from-var prefix-dependency-imports!, :arity 0, :row 175, :to mranderson.util} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 22, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 4, :row 175, :to clojure.core} {:filename "src/mranderson/core.clj", :row 177, :col 33, :from mranderson.core, :to mranderson.util, :name class-name->package-name, :fixed-arities #{1}, :from-var prefix-dependency-imports!} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 29, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 4, :row 177, :to clojure.core} {:fixed-arities #{1}, :name set, :filename "src/mranderson/core.clj", :from mranderson.core, :col 28, :from-var prefix-dependency-imports!, :arity 1, :row 178, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 24, :from-var prefix-dependency-imports!, :arity 3, :varargs-min-arity 1, :row 176, :to clojure.core} {:fixed-arities #{2}, :private true, :name filter-clj-files, :filename "src/mranderson/core.clj", :from mranderson.core, :col 20, :from-var prefix-dependency-imports!, :arity 2, :row 179, :to mranderson.core} {:filename "src/mranderson/core.clj", :row 180, :col 12, :from mranderson.core, :to clojure.core, :name seq, :arity 1, :from-var prefix-dependency-imports!} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/core.clj", :from mranderson.core, :col 77, :from-var prefix-dependency-imports!, :arity 2, :row 181, :to clojure.string} {:name format, :filename "src/mranderson/core.clj", :from mranderson.core, :col 16, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 1, :row 181, :to clojure.core} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var prefix-dependency-imports!, :arity 1, :varargs-min-arity 0, :row 181, :to mranderson.util} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 0, :row 182, :to mranderson.util} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 0, :row 183, :to mranderson.util} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 0, :row 184, :to mranderson.util} {:name when, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var prefix-dependency-imports!, :arity 8, :varargs-min-arity 1, :row 180, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 1, :row 165, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 164, :to clojure.core} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/core.clj", :from mranderson.core, :col 35, :from-var prefix-dependency-imports!, :arity 2, :row 185, :to clojure.string} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 0, :row 185, :to mranderson.util} {:filename "src/mranderson/core.clj", :row 187, :col 35, :from mranderson.core, :to me.raynes.fs, :name file, :arity 1, :from-var prefix-dependency-imports!} {:name slurp, :filename "src/mranderson/core.clj", :from mranderson.core, :col 28, :from-var prefix-dependency-imports!, :arity 1, :varargs-min-arity 1, :row 187, :to clojure.core} {:fixed-arities #{2}, :private true, :name find-orig-import, :filename "src/mranderson/core.clj", :from mranderson.core, :col 28, :from-var prefix-dependency-imports!, :arity 2, :row 188, :to mranderson.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 65, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 1, :row 189, :to clojure.core} {:fixed-arities #{1}, :name re-pattern, :filename "src/mranderson/core.clj", :from mranderson.core, :col 53, :from-var prefix-dependency-imports!, :arity 1, :row 189, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 86, :from-var prefix-dependency-imports!, :arity 4, :varargs-min-arity 1, :row 189, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 37, :from-var prefix-dependency-imports!, :arity 3, :row 189, :to clojure.string} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var prefix-dependency-imports!} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var prefix-dependency-imports!} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/core.clj", :from mranderson.core, :col 28, :from-var prefix-dependency-imports!, :arity 3, :row 189, :to clojure.core} {:filename "src/mranderson/core.clj", :row 190, :col 33, :from mranderson.core, :to java.util, :name randomUUID, :arity 0, :from-var prefix-dependency-imports!} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 28, :from-var prefix-dependency-imports!, :arity 1, :varargs-min-arity 1, :row 190, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 28, :from-var prefix-dependency-imports!, :arity 3, :row 191, :to clojure.string} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 65, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 1, :row 192, :to clojure.core} {:fixed-arities #{1}, :name re-pattern, :filename "src/mranderson/core.clj", :from mranderson.core, :col 53, :from-var prefix-dependency-imports!, :arity 1, :row 192, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 86, :from-var prefix-dependency-imports!, :arity 4, :varargs-min-arity 1, :row 192, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 37, :from-var prefix-dependency-imports!, :arity 3, :row 192, :to clojure.string} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var prefix-dependency-imports!} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var prefix-dependency-imports!} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/core.clj", :from mranderson.core, :col 28, :from-var prefix-dependency-imports!, :arity 3, :row 192, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 28, :from-var prefix-dependency-imports!, :arity 3, :row 193, :to clojure.string} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/core.clj", :from mranderson.core, :col 22, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 2, :row 194, :to clojure.core} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var prefix-dependency-imports!, :arity 6, :varargs-min-arity 0, :row 195, :to mranderson.util} {:name spit, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 2, :row 196, :to clojure.core} {:name when-not, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 12, :from-var prefix-dependency-imports!, :arity 3, :varargs-min-arity 1, :row 194, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 10, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 1, :row 187, :to clojure.core} {:name doseq, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 8, :from-var prefix-dependency-imports!, :arity 2, :varargs-min-arity 1, :row 186, :to clojure.core} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var prefix-dependency-imports!, :arity 1, :varargs-min-arity 0, :row 197, :to mranderson.util} {:fixed-arities #{5}, :private true, :name replacement-prefix, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var update-artifact!, :arity 5, :row 203, :to mranderson.core} {:fixed-arities #{1 2}, :name dissoc, :filename "src/mranderson/core.clj", :from mranderson.core, :col 33, :from-var update-artifact!, :varargs-min-arity 2, :row 204, :to clojure.core} {:fixed-arities #{3}, :private true, :name replacement, :filename "src/mranderson/core.clj", :from mranderson.core, :col 68, :from-var update-artifact!, :arity 3, :row 204, :to mranderson.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 63, :from-var update-artifact!, :arity 1, :varargs-min-arity 1, :row 204, :to clojure.core} {:filename "src/mranderson/core.clj", :row 204, :col 50, :from mranderson.core, :to clojure.core, :name assoc, :arity 3, :from-var update-artifact!} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var update-artifact!} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var update-artifact!} {:fixed-arities #{1}, :private true, :name possible-prefixes, :filename "src/mranderson/core.clj", :from mranderson.core, :col 106, :from-var update-artifact!, :arity 1, :row 204, :to mranderson.core} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/core.clj", :from mranderson.core, :col 41, :from-var update-artifact!, :arity 3, :row 204, :to clojure.core} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var update-artifact!, :arity 3, :varargs-min-arity 5, :row 204, :to clojure.core} {:filename "src/mranderson/core.clj", :row 205, :col 50, :from mranderson.core, :to mranderson.dependency.tree, :name path-pred, :fixed-arities #{3}, :from-var update-artifact!} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/core.clj", :from mranderson.core, :col 42, :from-var update-artifact!, :arity 3, :varargs-min-arity 4, :row 205, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/core.clj", :from mranderson.core, :col 34, :from-var update-artifact!, :arity 2, :row 205, :to clojure.core} {:filename "src/mranderson/core.clj", :row 205, :col 27, :from mranderson.core, :to clojure.core, :name first, :arity 1, :from-var update-artifact!} {:filename "src/mranderson/core.clj", :row 213, :col 37, :from mranderson.core, :to me.raynes.fs, :name file, :from-var update-artifact!} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 37, :from-var update-artifact!, :varargs-min-arity 1, :row 211, :to clojure.core} {:filename "src/mranderson/core.clj", :row 208, :col 37, :from mranderson.core, :to me.raynes.fs, :name file, :from-var update-artifact!} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 33, :from-var update-artifact!, :arity 2, :varargs-min-arity 4, :row 208, :to clojure.core} {:fixed-arities #{0 1 2}, :name concat, :filename "src/mranderson/core.clj", :from mranderson.core, :col 32, :from-var update-artifact!, :arity 3, :varargs-min-arity 2, :row 206, :to clojure.core} {:fixed-arities #{1}, :name vec, :filename "src/mranderson/core.clj", :from mranderson.core, :col 31, :from-var update-artifact!, :arity 1, :row 210, :to clojure.core} {:fixed-arities #{4 3 2}, :name mapv, :filename "src/mranderson/core.clj", :from mranderson.core, :col 32, :from-var update-artifact!, :arity 2, :varargs-min-arity 4, :row 211, :to clojure.core} {:fixed-arities #{1}, :name remove-subdirs, :filename "src/mranderson/core.clj", :from mranderson.core, :col 31, :from-var update-artifact!, :arity 1, :row 212, :to mranderson.util} {:fixed-arities #{4 3 2}, :name mapv, :filename "src/mranderson/core.clj", :from mranderson.core, :col 32, :from-var update-artifact!, :arity 2, :varargs-min-arity 4, :row 213, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 27, :from-var update-artifact!, :arity 5, :varargs-min-arity 1, :row 206, :to clojure.core} {:fixed-arities #{1}, :name boolean, :filename "src/mranderson/core.clj", :from mranderson.core, :col 109, :from-var update-artifact!, :arity 1, :row 214, :to clojure.core} {:name format, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var update-artifact!, :arity 4, :varargs-min-arity 1, :row 214, :to clojure.core} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var update-artifact!, :arity 1, :varargs-min-arity 0, :row 214, :to mranderson.util} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var update-artifact!, :arity 10, :varargs-min-arity 0, :row 215, :to mranderson.util} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var update-artifact!, :arity 2, :varargs-min-arity 0, :row 216, :to mranderson.util} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var update-artifact!, :arity 2, :varargs-min-arity 0, :row 217, :to mranderson.util} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var update-artifact!, :arity 10, :varargs-min-arity 1, :row 203, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 199, :to clojure.core} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/core.clj", :from mranderson.core, :col 39, :from-var update-artifact!, :arity 2, :row 218, :to clojure.string} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var update-artifact!, :arity 2, :varargs-min-arity 0, :row 218, :to mranderson.util} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var update-artifact!, :arity 2, :varargs-min-arity 0, :row 219, :to mranderson.util} {:name format, :filename "src/mranderson/core.clj", :from mranderson.core, :col 15, :from-var update-artifact!, :arity 3, :varargs-min-arity 1, :row 220, :to clojure.core} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var update-artifact!, :arity 1, :varargs-min-arity 0, :row 220, :to mranderson.util} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 28, :from-var update-artifact!, :arity 1, :varargs-min-arity 1, :row 222, :to clojure.core} {:fixed-arities #{1}, :name sym->file-name, :filename "src/mranderson/core.clj", :from mranderson.core, :col 43, :from-var update-artifact!, :arity 1, :row 222, :to mranderson.util} {:fixed-arities #{2}, :name ends-with?, :filename "src/mranderson/core.clj", :from mranderson.core, :col 12, :from-var update-artifact!, :arity 2, :row 222, :to clojure.string} {:fixed-arities #{6}, :private true, :name prefix-dependency-imports!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 17, :from-var update-artifact!, :arity 6, :row 224, :to mranderson.core} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name let*, :arity 2, :from-var update-artifact!} {:filename "src/mranderson/core.clj", :row nil, :col nil, :from mranderson.core, :to clojure.core, :name fn*, :arity 2, :from-var update-artifact!} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 11, :from-var update-artifact!, :arity 2, :varargs-min-arity 4, :row 224, :to clojure.core} {:fixed-arities #{1 2}, :name doall, :filename "src/mranderson/core.clj", :from mranderson.core, :col 10, :from-var update-artifact!, :arity 1, :row 223, :to clojure.core} {:fixed-arities #{6}, :private true, :name prefix-dependency-imports!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 10, :from-var update-artifact!, :arity 6, :row 225, :to mranderson.core} {:filename "src/mranderson/core.clj", :row 222, :col 8, :from mranderson.core, :to clojure.core, :name if, :arity 3, :from-var update-artifact!} {:name when-not, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var update-artifact!, :arity 2, :varargs-min-arity 1, :row 221, :to clojure.core} {:filename "src/mranderson/core.clj", :row 227, :col 38, :from mranderson.core, :to me.raynes.fs, :name file, :arity 2, :from-var update-artifact!} {:filename "src/mranderson/core.clj", :row 227, :col 55, :from mranderson.core, :to clojure.tools.namespace.file, :name read-file-ns-decl, :arity 1, :from-var update-artifact!} {:filename "src/mranderson/core.clj", :row 227, :col 73, :from mranderson.core, :to clojure.core, :name second, :arity 1, :from-var update-artifact!} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 24, :from-var update-artifact!, :arity 4, :varargs-min-arity 1, :row 227, :to clojure.core} {:fixed-arities #{3}, :private true, :name replacement, :filename "src/mranderson/core.clj", :from mranderson.core, :col 23, :from-var update-artifact!, :arity 3, :row 228, :to mranderson.core} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 12, :from-var update-artifact!, :arity 2, :varargs-min-arity 0, :row 229, :to mranderson.util} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 67, :from-var update-artifact!, :arity 1, :varargs-min-arity 1, :row 230, :to clojure.core} {:fixed-arities #{1}, :name file->extension, :filename "src/mranderson/core.clj", :from mranderson.core, :col 48, :from-var update-artifact!, :arity 1, :row 230, :to mranderson.util} {:fixed-arities #{6}, :name move-ns, :filename "src/mranderson/core.clj", :from mranderson.core, :col 12, :from-var update-artifact!, :arity 6, :row 230, :to mranderson.move} {:fixed-arities #{1}, :name sym->file-name, :filename "src/mranderson/core.clj", :from mranderson.core, :col 47, :from-var update-artifact!, :arity 1, :row 231, :to mranderson.util} {:fixed-arities #{2}, :name ends-with?, :filename "src/mranderson/core.clj", :from mranderson.core, :col 22, :from-var update-artifact!, :arity 2, :row 231, :to clojure.string} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 18, :from-var update-artifact!, :arity 2, :varargs-min-arity 1, :row 231, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 87, :from-var update-artifact!, :arity 1, :varargs-min-arity 1, :row 232, :to clojure.core} {:fixed-arities #{1}, :name file->extension, :filename "src/mranderson/core.clj", :from mranderson.core, :col 68, :from-var update-artifact!, :arity 1, :row 232, :to mranderson.util} {:fixed-arities #{5}, :name replace-ns-symbol-in-source-files, :filename "src/mranderson/core.clj", :from mranderson.core, :col 14, :from-var update-artifact!, :arity 5, :row 232, :to mranderson.move} {:name when, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 12, :from-var update-artifact!, :arity 2, :varargs-min-arity 1, :row 231, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 10, :from-var update-artifact!, :arity 4, :varargs-min-arity 1, :row 228, :to clojure.core} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/core.clj", :from mranderson.core, :col 20, :from-var update-artifact!, :arity 2, :varargs-min-arity 2, :row 234, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var update-artifact!, :arity 2, :varargs-min-arity 1, :row 235, :to clojure.core} {:fixed-arities #{1}, :name sym->file-name, :filename "src/mranderson/core.clj", :from mranderson.core, :col 32, :from-var update-artifact!, :arity 1, :row 236, :to mranderson.util} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var update-artifact!, :arity 7, :varargs-min-arity 1, :row 236, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 33, :from-var update-artifact!, :arity 2, :varargs-min-arity 1, :row 237, :to clojure.core} {:filename "src/mranderson/core.clj", :row 237, :col 14, :from mranderson.core, :to me.raynes.fs, :name copy+, :arity 2, :from-var update-artifact!} {:fixed-arities #{1}, :name clojure-source-files, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var update-artifact!, :arity 1, :row 239, :to mranderson.util} {:fixed-arities #{3}, :private true, :name update-path-in-file, :filename "src/mranderson/core.clj", :from mranderson.core, :col 16, :from-var update-artifact!, :arity 3, :row 240, :to mranderson.core} {:name doseq, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 14, :from-var update-artifact!, :arity 2, :varargs-min-arity 1, :row 239, :to clojure.core} {:filename "src/mranderson/core.clj", :row 242, :col 14, :from mranderson.core, :to me.raynes.fs, :name delete, :arity 1, :from-var update-artifact!} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 12, :from-var update-artifact!, :arity 4, :varargs-min-arity 1, :row 235, :to clojure.core} {:name when-not, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 10, :from-var update-artifact!, :arity 2, :varargs-min-arity 1, :row 234, :to clojure.core} {:fixed-arities #{2}, :name if-let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 8, :from-var update-artifact!, :arity 3, :varargs-min-arity 3, :row 227, :to clojure.core} {:name doseq, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var update-artifact!, :arity 2, :varargs-min-arity 1, :row 226, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 70, :from-var update-artifact!, :arity 1, :varargs-min-arity 1, :row 224, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 65, :from-var update-artifact!, :arity 1, :varargs-min-arity 1, :row 225, :to clojure.core} {:filename "src/mranderson/core.clj", :row 245, :col 34, :from mranderson.core, :to clojure.core, :name first, :arity 1, :from-var unzip-artifact!} {:fixed-arities #{1}, :name name, :filename "src/mranderson/core.clj", :from mranderson.core, :col 40, :from-var unzip-artifact!, :arity 1, :row 245, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/core.clj", :from mranderson.core, :col 46, :from-var unzip-artifact!, :arity 2, :row 245, :to clojure.string} {:filename "src/mranderson/core.clj", :row 245, :col 62, :from mranderson.core, :to clojure.core, :name last, :arity 1, :from-var unzip-artifact!} {:name ->, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 27, :from-var unzip-artifact!, :arity 5, :varargs-min-arity 1, :row 245, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var unzip-artifact!, :arity 3, :row 246, :to clojure.string} {:filename "src/mranderson/core.clj", :row 247, :col 43, :from mranderson.core, :to clojure.core, :name second, :arity 1, :from-var unzip-artifact!} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 51, :from-var unzip-artifact!, :arity 3, :row 247, :to clojure.string} {:name ->, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 36, :from-var unzip-artifact!, :arity 3, :varargs-min-arity 1, :row 247, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var unzip-artifact!, :arity 2, :varargs-min-arity 1, :row 247, :to clojure.core} {:filename "src/mranderson/core.clj", :row 248, :col 48, :from mranderson.core, :to clojure.core, :name meta, :arity 1, :from-var unzip-artifact!} {:name ->, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 41, :from-var unzip-artifact!, :arity 3, :varargs-min-arity 1, :row 248, :to clojure.core} {:fixed-arities #{1 2}, :private true, :name unzip, :filename "src/mranderson/core.clj", :from mranderson.core, :col 34, :from-var unzip-artifact!, :arity 2, :row 248, :to mranderson.core} {:fixed-arities #{1 2}, :name doall, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var unzip-artifact!, :arity 1, :row 248, :to clojure.core} {:fixed-arities #{2}, :name clj-files->dirs, :filename "src/mranderson/core.clj", :from mranderson.core, :col 27, :from-var unzip-artifact!, :arity 2, :row 249, :to mranderson.util} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var unzip-artifact!, :arity 5, :varargs-min-arity 0, :row 250, :to mranderson.util} {:name format, :filename "src/mranderson/core.clj", :from mranderson.core, :col 15, :from-var unzip-artifact!, :arity 2, :varargs-min-arity 1, :row 251, :to clojure.core} {:name debug, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var unzip-artifact!, :arity 1, :varargs-min-arity 0, :row 251, :to mranderson.util} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/core.clj", :from mranderson.core, :col 56, :from-var unzip-artifact!, :arity 2, :row 257, :to clojure.string} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/core.clj", :from mranderson.core, :col 43, :from-var unzip-artifact!, :arity 3, :row 257, :to clojure.string} {:filename "src/mranderson/core.clj", :row 257, :col 25, :from mranderson.core, :to me.raynes.fs, :name file, :arity 2, :from-var unzip-artifact!} {:filename "src/mranderson/core.clj", :row 258, :col 38, :from mranderson.core, :to clojure.core, :name first, :arity 1, :from-var unzip-artifact!} {:filename "src/mranderson/core.clj", :row 258, :col 25, :from mranderson.core, :to clojure.core, :name conj, :arity 2, :from-var unzip-artifact!} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var unzip-artifact!, :arity 4, :varargs-min-arity 1, :row 245, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 244, :to clojure.core} {:filename "src/mranderson/core.clj", :row 259, :col 29, :from mranderson.core, :to me.raynes.fs, :name file, :from-var unzip-artifact!} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/core.clj", :from mranderson.core, :col 25, :from-var unzip-artifact!, :arity 2, :varargs-min-arity 4, :row 259, :to clojure.core} {:filename "src/mranderson/core.clj", :row 263, :col 17, :from mranderson.core, :to clojure.core, :name first, :arity 1, :from-var copy-source-files} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/core.clj", :from mranderson.core, :col 38, :from-var copy-source-files, :arity 2, :varargs-min-arity 1, :row 263, :to clojure.core} {:filename "src/mranderson/core.clj", :row 263, :col 4, :from mranderson.core, :to me.raynes.fs, :name copy-dir, :arity 2, :from-var copy-source-files} {:name defn, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 261, :to clojure.core} {:fixed-arities #{2}, :name evict-subtrees, :filename "src/mranderson/core.clj", :from mranderson.core, :col 31, :from-var mranderson-unresolved-deps!, :arity 2, :row 268, :to mranderson.dependency.tree} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var mranderson-unresolved-deps!, :arity 1, :varargs-min-arity 0, :row 269, :to mranderson.util} {:fixed-arities #{2}, :private true, :name print-dep, :filename "src/mranderson/core.clj", :from mranderson.core, :col 39, :from-var mranderson-unresolved-deps!, :row 270, :to mranderson.core} {:fixed-arities #{3 2}, :name walk-deps, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var mranderson-unresolved-deps!, :arity 2, :row 270, :to mranderson.dependency.tree} {:fixed-arities #{3}, :private true, :name unzip-artifact!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 43, :from-var mranderson-unresolved-deps!, :row 271, :to mranderson.core} {:fixed-arities #{3}, :private true, :name update-artifact!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 59, :from-var mranderson-unresolved-deps!, :row 271, :to mranderson.core} {:fixed-arities #{5}, :name walk-dep-tree, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var mranderson-unresolved-deps!, :arity 5, :row 271, :to mranderson.dependency.tree} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var mranderson-unresolved-deps!, :arity 4, :varargs-min-arity 1, :row 268, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 265, :to clojure.core} {:fixed-arities #{1}, :name topological-order, :filename "src/mranderson/core.clj", :from mranderson.core, :col 37, :from-var mranderson-resolved-deps!, :arity 1, :row 281, :to mranderson.dependency.tree} {:filename "src/mranderson/core.clj", :row 283, :col 81, :from mranderson.core, :to java.lang.Long, :name MAX_VALUE, :from-var mranderson-resolved-deps!} {:fixed-arities #{3 2}, :name get, :filename "src/mranderson/core.clj", :from mranderson.core, :col 48, :from-var mranderson-resolved-deps!, :arity 3, :row 283, :to clojure.core} {:filename "src/mranderson/core.clj", :row 284, :col 81, :from mranderson.core, :to java.lang.Long, :name MAX_VALUE, :from-var mranderson-resolved-deps!} {:fixed-arities #{3 2}, :name get, :filename "src/mranderson/core.clj", :from mranderson.core, :col 48, :from-var mranderson-resolved-deps!, :arity 3, :row 284, :to clojure.core} {:fixed-arities #{2}, :name compare, :filename "src/mranderson/core.clj", :from mranderson.core, :col 39, :from-var mranderson-resolved-deps!, :arity 2, :row 283, :to clojure.core} {:name fn, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 37, :from-var mranderson-resolved-deps!, :arity 2, :varargs-min-arity 0, :row 282, :to clojure.core} {:fixed-arities #{2}, :name evict-subtrees, :filename "src/mranderson/core.clj", :from mranderson.core, :col 37, :from-var mranderson-resolved-deps!, :arity 2, :row 285, :to mranderson.dependency.tree} {:name sorted-map-by, :filename "src/mranderson/core.clj", :from mranderson.core, :col 48, :from-var mranderson-resolved-deps!, :arity 1, :varargs-min-arity 1, :row 289, :to clojure.core} {:filename "src/mranderson/core.clj", :row 288, :col 62, :from mranderson.core, :to clojure.core, :name assoc, :arity 3, :from-var mranderson-resolved-deps!} {:name fn, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 50, :from-var mranderson-resolved-deps!, :arity 2, :varargs-min-arity 0, :row 288, :to clojure.core} {:filename "src/mranderson/core.clj", :row 287, :col 49, :from mranderson.core, :to clojure.core, :name vector?, :from-var mranderson-resolved-deps!} {:filename "src/mranderson/core.clj", :row 286, :col 51, :from mranderson.core, :to clojure.core, :name map?, :from-var mranderson-resolved-deps!} {:fixed-arities #{1}, :name keys, :filename "src/mranderson/core.clj", :from mranderson.core, :col 73, :from-var mranderson-resolved-deps!, :arity 1, :row 286, :to clojure.core} {:fixed-arities #{1}, :name vals, :filename "src/mranderson/core.clj", :from mranderson.core, :col 82, :from-var mranderson-resolved-deps!, :arity 1, :row 286, :to clojure.core} {:fixed-arities #{0 1 2}, :name concat, :filename "src/mranderson/core.clj", :from mranderson.core, :col 65, :from-var mranderson-resolved-deps!, :arity 2, :varargs-min-arity 2, :row 286, :to clojure.core} {:name fn, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 57, :from-var mranderson-resolved-deps!, :arity 2, :varargs-min-arity 0, :row 286, :to clojure.core} {:fixed-arities #{3}, :name tree-seq, :filename "src/mranderson/core.clj", :from mranderson.core, :col 42, :from-var mranderson-resolved-deps!, :arity 3, :row 286, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/core.clj", :from mranderson.core, :col 42, :from-var mranderson-resolved-deps!, :arity 2, :row 287, :to clojure.core} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/core.clj", :from mranderson.core, :col 42, :from-var mranderson-resolved-deps!, :arity 3, :row 288, :to clojure.core} {:fixed-arities #{0 1 3 2}, :name into, :filename "src/mranderson/core.clj", :from mranderson.core, :col 42, :from-var mranderson-resolved-deps!, :arity 2, :row 289, :to clojure.core} {:name ->>, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 37, :from-var mranderson-resolved-deps!, :arity 4, :varargs-min-arity 1, :row 286, :to clojure.core} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var mranderson-resolved-deps!, :arity 1, :varargs-min-arity 0, :row 290, :to mranderson.util} {:fixed-arities #{2}, :private true, :name print-dep, :filename "src/mranderson/core.clj", :from mranderson.core, :col 32, :from-var mranderson-resolved-deps!, :row 291, :to mranderson.core} {:fixed-arities #{3 2}, :name walk-deps, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var mranderson-resolved-deps!, :arity 2, :row 291, :to mranderson.dependency.tree} {:fixed-arities #{3}, :private true, :name unzip-artifact!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var mranderson-resolved-deps!, :row 294, :to mranderson.core} {:fixed-arities #{3}, :private true, :name update-artifact!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var mranderson-resolved-deps!, :row 295, :to mranderson.core} {:fixed-arities #{5}, :name walk-ordered-deps, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var mranderson-resolved-deps!, :arity 5, :row 292, :to mranderson.dependency.tree} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var mranderson-resolved-deps!, :arity 4, :varargs-min-arity 1, :row 281, :to clojure.core} {:name defn-, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 273, :to clojure.core} {:filename "src/mranderson/core.clj", :row 316, :col 45, :from mranderson.core, :to mranderson.util, :name source-dep?, :fixed-arities #{1}, :from-var mranderson} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/core.clj", :from mranderson.core, :col 38, :from-var mranderson, :arity 2, :row 316, :to clojure.core} {:fixed-arities #{2}, :name resolve-source-deps, :filename "src/mranderson/core.clj", :from mranderson.core, :col 38, :from-var mranderson, :arity 2, :row 317, :to mranderson.dependency.resolver} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 42, :from-var mranderson, :arity 2, :varargs-min-arity 1, :row 318, :to clojure.core} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 38, :from-var mranderson, :arity 2, :varargs-min-arity 1, :row 318, :to clojure.core} {:fixed-arities #{3}, :name expand-dep-hierarchy, :filename "src/mranderson/core.clj", :from mranderson.core, :col 38, :from-var mranderson, :arity 3, :row 319, :to mranderson.dependency.resolver} {:name info, :filename "src/mranderson/core.clj", :from mranderson.core, :col 6, :from-var mranderson, :arity 1, :varargs-min-arity 0, :row 320, :to mranderson.util} {:fixed-arities #{3}, :private true, :name mranderson-unresolved-deps!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var mranderson, :arity 3, :row 322, :to mranderson.core} {:fixed-arities #{4}, :private true, :name mranderson-resolved-deps!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var mranderson, :arity 4, :row 323, :to mranderson.core} {:filename "src/mranderson/core.clj", :row 321, :col 6, :from mranderson.core, :to clojure.core, :name if, :arity 3, :from-var mranderson} {:fixed-arities #{0}, :name class-files, :filename "src/mranderson/core.clj", :from mranderson.core, :col 56, :from-var mranderson, :arity 0, :row 324, :to mranderson.util} {:fixed-arities #{1}, :name empty?, :filename "src/mranderson/core.clj", :from mranderson.core, :col 48, :from-var mranderson, :arity 1, :row 324, :to clojure.core} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 16, :from-var mranderson, :arity 2, :varargs-min-arity 1, :row 324, :to clojure.core} {:fixed-arities #{0}, :private true, :name class-deps-jar!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var mranderson, :arity 0, :row 325, :to mranderson.core} {:fixed-arities #{2}, :name apply-jarjar!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var mranderson, :arity 2, :row 326, :to mranderson.util} {:fixed-arities #{0}, :private true, :name replace-class-deps!, :filename "src/mranderson/core.clj", :from mranderson.core, :col 8, :from-var mranderson, :arity 0, :row 327, :to mranderson.core} {:name when-not, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 6, :from-var mranderson, :arity 4, :varargs-min-arity 1, :row 324, :to clojure.core} {:name let, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 4, :from-var mranderson, :arity 4, :varargs-min-arity 1, :row 316, :to clojure.core} {:name defn, :filename "src/mranderson/core.clj", :from mranderson.core, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 299, :to clojure.core} {:name slurp, :filename "src/mranderson/move.clj", :from mranderson.move, :col 14, :from-var update-file, :arity 1, :varargs-min-arity 1, :row 38, :to clojure.core} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/move.clj", :from mranderson.move, :col 19, :from-var update-file, :arity 3, :varargs-min-arity 5, :row 39, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 14, :from-var update-file, :arity 1, :varargs-min-arity 1, :row 39, :to clojure.core} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 16, :from-var update-file, :arity 2, :varargs-min-arity 2, :row 40, :to clojure.core} {:name spit, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var update-file, :arity 2, :varargs-min-arity 2, :row 41, :to clojure.core} {:name when-not, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var update-file, :arity 2, :varargs-min-arity 1, :row 40, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var update-file, :arity 2, :varargs-min-arity 1, :row 38, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 33, :to clojure.core} {:fixed-arities #{1}, :name sym->file-name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 23, :from-var sym->file, :arity 1, :row 45, :to mranderson.util} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 18, :from-var sym->file, :arity 2, :varargs-min-arity 1, :row 45, :to clojure.core} {:fixed-arities #{1 2}, :name file, :filename "src/mranderson/move.clj", :from mranderson.move, :col 4, :from-var sym->file, :arity 2, :varargs-min-arity 2, :row 45, :to clojure.java.io} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 43, :to clojure.core} {:fixed-arities #{1}, :name file->extension, :filename "src/mranderson/move.clj", :from mranderson.move, :col 19, :from-var update?, :arity 1, :row 48, :to mranderson.util} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 12, :from-var update?, :arity 2, :varargs-min-arity 2, :row 51, :to clojure.core} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 7, :from-var update?, :arity 2, :varargs-min-arity 1, :row 51, :to clojure.core} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 7, :from-var update?, :arity 2, :varargs-min-arity 2, :row 53, :to clojure.core} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 7, :from-var update?, :arity 2, :varargs-min-arity 2, :row 54, :to clojure.core} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var update?, :arity 3, :varargs-min-arity 1, :row 50, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var update?, :arity 2, :varargs-min-arity 1, :row 48, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 47, :to clojure.core} {:filename "src/mranderson/move.clj", :row 64, :col 34, :from mranderson.move, :to java.io, :name File, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row 64, :col 15, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .getCanonicalFile, :arity 1, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row nil, :col nil, :from mranderson.move, :to clojure.core, :name let*, :arity 2, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row nil, :col nil, :from mranderson.move, :to clojure.core, :name fn*, :arity 2, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row 61, :col 22, :from mranderson.move, :to java.io, :name File, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row 61, :col 22, :from mranderson.move, :to java.io, :name File, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row 62, :col 24, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .isFile, :arity 1, :from-var clojure-source-files} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 33, :from-var clojure-source-files, :arity 1, :varargs-min-arity 1, :row 63, :to clojure.core} {:fixed-arities #{2}, :private true, :name update?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 24, :from-var clojure-source-files, :arity 2, :row 63, :to mranderson.move} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 19, :from-var clojure-source-files, :arity 2, :varargs-min-arity 1, :row 62, :to clojure.core} {:name fn, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 17, :from-var clojure-source-files, :arity 2, :varargs-min-arity 0, :row 61, :to clojure.core} {:filename "src/mranderson/move.clj", :row 60, :col 16, :from mranderson.move, :to clojure.core, :name file-seq, :fixed-arities #{1}, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row 59, :col 27, :from mranderson.move, :to java.io, :name File, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row 59, :col 18, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .exists, :arity 1, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row nil, :col nil, :from mranderson.move, :to clojure.core, :name let*, :arity 2, :from-var clojure-source-files} {:filename "src/mranderson/move.clj", :row nil, :col nil, :from mranderson.move, :to clojure.core, :name fn*, :arity 2, :from-var clojure-source-files} {:fixed-arities #{1 2}, :name file, :filename "src/mranderson/move.clj", :from mranderson.move, :col 13, :from-var clojure-source-files, :varargs-min-arity 2, :row 58, :to clojure.java.io} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var clojure-source-files, :arity 2, :varargs-min-arity 4, :row 58, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var clojure-source-files, :arity 2, :row 59, :to clojure.core} {:fixed-arities #{1}, :name mapcat, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var clojure-source-files, :arity 2, :varargs-min-arity 1, :row 60, :to clojure.core} {:fixed-arities #{1 2}, :name filter, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var clojure-source-files, :arity 2, :row 61, :to clojure.core} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var clojure-source-files, :arity 2, :varargs-min-arity 4, :row 64, :to clojure.core} {:name ->>, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var clojure-source-files, :arity 6, :varargs-min-arity 1, :row 57, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 56, :to clojure.core} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 51, :from-var prefix-libspec, :arity 1, :row 67, :to clojure.core} {:fixed-arities #{3 2}, :name split, :filename "src/mranderson/move.clj", :from mranderson.move, :col 40, :from-var prefix-libspec, :arity 2, :row 67, :to clojure.string} {:filename "src/mranderson/move.clj", :row 67, :col 31, :from mranderson.move, :to clojure.core, :name butlast, :arity 1, :from-var prefix-libspec} {:fixed-arities #{1 2}, :name join, :filename "src/mranderson/move.clj", :from mranderson.move, :col 17, :from-var prefix-libspec, :arity 2, :row 67, :to clojure.string} {:fixed-arities #{1 2}, :name symbol, :filename "src/mranderson/move.clj", :from mranderson.move, :col 18, :from-var prefix-libspec, :arity 1, :row 68, :to clojure.core} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var prefix-libspec, :arity 2, :varargs-min-arity 1, :row 68, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var prefix-libspec, :arity 2, :varargs-min-arity 1, :row 67, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 66, :to clojure.core} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 17, :from-var java-package, :arity 1, :row 71, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/move.clj", :from mranderson.move, :col 4, :from-var java-package, :arity 3, :row 71, :to clojure.string} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 70, :to clojure.core} {:filename "src/mranderson/move.clj", :row 75, :col 26, :from mranderson.move, :to rewrite-clj.zip.base, :name tag, :arity 1, :from-var java-style-prefix?} {:filename "src/mranderson/move.clj", :row 76, :col 28, :from mranderson.move, :to rewrite-clj.zip.base, :name sexpr, :arity 1, :from-var java-style-prefix?} {:fixed-arities #{1}, :private true, :name java-package, :filename "src/mranderson/move.clj", :from mranderson.move, :col 37, :from-var java-style-prefix?, :arity 1, :row 77, :to mranderson.move} {:fixed-arities #{2}, :name starts-with?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var java-style-prefix?, :arity 2, :row 77, :to clojure.string} {:name when-let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var java-style-prefix?, :arity 2, :varargs-min-arity 1, :row 76, :to clojure.core} {:name when-not, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var java-style-prefix?, :arity 2, :varargs-min-arity 1, :row 75, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 73, :to clojure.core} {:fixed-arities #{1}, :private true, :name prefix-libspec, :filename "src/mranderson/move.clj", :from mranderson.move, :col 33, :from-var libspec-prefix?, :arity 1, :row 81, :to mranderson.move} {:filename "src/mranderson/move.clj", :row 82, :col 33, :from mranderson.move, :to rewrite-clj.zip, :name leftmost?, :arity 1, :from-var libspec-prefix?} {:filename "src/mranderson/move.clj", :row 83, :col 45, :from mranderson.move, :to rewrite-clj.zip, :name up, :arity 1, :from-var libspec-prefix?} {:filename "src/mranderson/move.clj", :row 83, :col 33, :from mranderson.move, :to rewrite-clj.zip, :name leftmost, :arity 1, :from-var libspec-prefix?} {:filename "src/mranderson/move.clj", :row 87, :col 40, :from mranderson.move, :to rewrite-clj.zip.base, :name tag, :arity 1, :from-var libspec-prefix?} {:fixed-arities #{1}, :name not, :filename "src/mranderson/move.clj", :from mranderson.move, :col 38, :from-var libspec-prefix?, :arity 1, :row 85, :to clojure.core} {:filename "src/mranderson/move.clj", :row 88, :col 38, :from mranderson.move, :to rewrite-clj.zip.base, :name sexpr, :arity 1, :from-var libspec-prefix?} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 33, :from-var libspec-prefix?, :arity 3, :varargs-min-arity 1, :row 84, :to clojure.core} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 11, :from-var libspec-prefix?, :arity 2, :varargs-min-arity 2, :row 90, :to clojure.core} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 11, :from-var libspec-prefix?, :arity 2, :varargs-min-arity 2, :row 91, :to clojure.core} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var libspec-prefix?, :arity 3, :varargs-min-arity 1, :row 89, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var libspec-prefix?, :arity 2, :varargs-min-arity 1, :row 81, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 79, :to clojure.core} {:filename "src/mranderson/move.clj", :row 94, :col 26, :from mranderson.move, :to rewrite-clj.zip.base, :name tag, :arity 1, :from-var contains-sym?} {:filename "src/mranderson/move.clj", :row 95, :col 28, :from mranderson.move, :to rewrite-clj.zip.base, :name sexpr, :arity 1, :from-var contains-sym?} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var contains-sym?, :arity 2, :varargs-min-arity 2, :row 97, :to clojure.core} {:fixed-arities #{3}, :private true, :name libspec-prefix?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var contains-sym?, :arity 3, :row 98, :to mranderson.move} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 8, :from-var contains-sym?, :arity 2, :varargs-min-arity 1, :row 96, :to clojure.core} {:name when-let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var contains-sym?, :arity 2, :varargs-min-arity 1, :row 95, :to clojure.core} {:name when-not, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var contains-sym?, :arity 2, :varargs-min-arity 1, :row 94, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 93, :to clojure.core} {:fixed-arities #{1}, :private true, :name prefix-libspec, :filename "src/mranderson/move.clj", :from mranderson.move, :col 21, :from-var ->new-node, :arity 1, :row 101, :to mranderson.move} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var ->new-node, :arity 1, :row 106, :to clojure.core} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var ->new-node, :arity 1, :row 107, :to clojure.core} {:fixed-arities #{3}, :name replace-first, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var ->new-node, :arity 3, :row 105, :to clojure.string} {:name ->, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col nil, :from-var ->new-node, :arity 2, :varargs-min-arity 1, :row nil, :to clojure.core} {:filename "src/mranderson/move.clj", :row nil, :col nil, :from mranderson.move, :to clojure.core, :name if, :arity 3, :from-var ->new-node} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var ->new-node, :arity 2, :varargs-min-arity 2, :row 109, :to clojure.core} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var ->new-node, :arity 1, :row 111, :to clojure.core} {:fixed-arities #{1}, :private true, :name prefix-libspec, :filename "src/mranderson/move.clj", :from mranderson.move, :col 15, :from-var ->new-node, :arity 1, :row 112, :to mranderson.move} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 9, :from-var ->new-node, :arity 1, :row 112, :to clojure.core} {:fixed-arities #{3}, :name replace-first, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var ->new-node, :arity 3, :row 110, :to clojure.string} {:name ->, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col nil, :from-var ->new-node, :arity 2, :varargs-min-arity 1, :row nil, :to clojure.core} {:filename "src/mranderson/move.clj", :row nil, :col nil, :from mranderson.move, :to clojure.core, :name if, :arity 3, :from-var ->new-node} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col nil, :from-var ->new-node, :arity 2, :varargs-min-arity 1, :row nil, :to clojure.core} {:name cond->, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var ->new-node, :arity 5, :varargs-min-arity 1, :row 102, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var ->new-node, :arity 2, :varargs-min-arity 1, :row 101, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 100, :to clojure.core} {:fixed-arities #{3}, :private true, :name ->new-node, :filename "src/mranderson/move.clj", :from mranderson.move, :col 19, :from-var replace-in-node, :arity 3, :row 115, :to mranderson.move} {:fixed-arities #{1}, :name symbol?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var replace-in-node, :arity 1, :row 117, :to clojure.core} {:fixed-arities #{1 2}, :name symbol, :filename "src/mranderson/move.clj", :from mranderson.move, :col 27, :from-var replace-in-node, :arity 1, :row 117, :to clojure.core} {:name cond, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var replace-in-node, :arity 4, :varargs-min-arity 0, :row 116, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var replace-in-node, :arity 2, :varargs-min-arity 1, :row 115, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 114, :to clojure.core} {:filename "src/mranderson/move.clj", :row 122, :col 26, :from mranderson.move, :to rewrite-clj.zip.base, :name tag, :arity 1, :from-var ns-decl?} {:filename "src/mranderson/move.clj", :row 123, :col 22, :from mranderson.move, :to rewrite-clj.zip, :name down, :arity 1, :from-var ns-decl?} {:filename "src/mranderson/move.clj", :row 123, :col 13, :from mranderson.move, :to rewrite-clj.zip.base, :name sexpr, :arity 1, :from-var ns-decl?} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 6, :from-var ns-decl?, :arity 2, :varargs-min-arity 2, :row 123, :to clojure.core} {:name when-not, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var ns-decl?, :arity 2, :varargs-min-arity 1, :row 122, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 121, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 35, :from-var ns-form-placeholder, :arity 3, :varargs-min-arity 1, :row 125, :to clojure.core} {:fixed-arities #{1 3 2}, :name def, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 2, :row 125, :to clojure.core} {:filename "src/mranderson/move.clj", :row 130, :col 21, :from mranderson.move, :to rewrite-clj.reader, :name string-reader, :arity 1, :from-var split-ns-form-ns-body} {:filename "src/mranderson/move.clj", :row 131, :col 21, :from mranderson.move, :to rewrite-clj.parser, :name parse, :arity 1, :from-var split-ns-form-ns-body} {:filename "src/mranderson/move.clj", :row 132, :col 43, :from mranderson.move, :to rewrite-clj.zip, :name edn, :arity 1, :from-var split-ns-form-ns-body} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 27, :from-var split-ns-form-ns-body, :arity 2, :varargs-min-arity 1, :row 132, :to clojure.core} {:fixed-arities #{1}, :private true, :name ns-decl?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 12, :from-var split-ns-form-ns-body, :arity 1, :row 133, :to mranderson.move} {:filename "src/mranderson/move.clj", :row 135, :col 32, :from mranderson.move, :to rewrite-clj.zip, :name root-string, :arity 1, :from-var split-ns-form-ns-body} {:filename "src/mranderson/move.clj", :row 135, :col 61, :from mranderson.move, :to mranderson.move, :name ns-form-placeholder, :from-var split-ns-form-ns-body} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/move.clj", :from mranderson.move, :col 11, :from-var split-ns-form-ns-body, :arity 3, :row 135, :to clojure.string} {:filename "src/mranderson/move.clj", :row 136, :col 29, :from mranderson.move, :to rewrite-clj.parser, :name parse, :arity 1, :from-var split-ns-form-ns-body} {:filename "src/mranderson/move.clj", :row 137, :col 12, :from mranderson.move, :to clojure.core, :name recur, :from-var split-ns-form-ns-body} {:filename "src/mranderson/move.clj", :row 137, :col 19, :from mranderson.move, :to rewrite-clj.zip, :name edn, :arity 1, :from-var split-ns-form-ns-body} {:filename "src/mranderson/move.clj", :row 137, :col 12, :from mranderson.move, :to clojure.core, :name recur, :arity 1, :from-var split-ns-form-ns-body} {:fixed-arities #{2}, :name if-let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 10, :from-var split-ns-form-ns-body, :arity 3, :varargs-min-arity 3, :row 136, :to clojure.core} {:filename "src/mranderson/move.clj", :row 133, :col 8, :from mranderson.move, :to clojure.core, :name if, :arity 3, :from-var split-ns-form-ns-body} {:name loop, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var split-ns-form-ns-body, :arity 2, :varargs-min-arity 1, :row 132, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var split-ns-form-ns-body, :arity 2, :varargs-min-arity 1, :row 130, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 127, :to clojure.core} {:filename "src/mranderson/move.clj", :row 142, :col 21, :from mranderson.move, :to rewrite-clj.zip, :name down, :arity 1, :from-var watermark-ns-maybe} {:filename "src/mranderson/move.clj", :row 143, :col 20, :from mranderson.move, :to rewrite-clj.zip, :name right, :arity 1, :from-var watermark-ns-maybe} {:filename "src/mranderson/move.clj", :row 144, :col 69, :from mranderson.move, :to clojure.core, :name meta, :arity 1, :from-var watermark-ns-maybe} {:filename "src/mranderson/move.clj", :row 144, :col 62, :from mranderson.move, :to clojure.core, :name assoc, :arity 3, :from-var watermark-ns-maybe} {:filename "src/mranderson/move.clj", :row 144, :col 43, :from mranderson.move, :to clojure.core, :name with-meta, :arity 2, :from-var watermark-ns-maybe} {:name fn, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 29, :from-var watermark-ns-maybe, :arity 2, :varargs-min-arity 0, :row 144, :to clojure.core} {:filename "src/mranderson/move.clj", :row 144, :col 21, :from mranderson.move, :to rewrite-clj.zip, :name edit, :arity 2, :from-var watermark-ns-maybe} {:filename "src/mranderson/move.clj", :row 145, :col 20, :from mranderson.move, :to rewrite-clj.zip, :name root, :arity 1, :from-var watermark-ns-maybe} {:filename "src/mranderson/move.clj", :row 146, :col 20, :from mranderson.move, :to rewrite-clj.zip, :name edn, :arity 1, :from-var watermark-ns-maybe} {:name some->, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 13, :from-var watermark-ns-maybe, :arity 5, :varargs-min-arity 1, :row 142, :to clojure.core} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 8, :from-var watermark-ns-maybe, :arity 2, :varargs-min-arity 1, :row 141, :to clojure.core} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var watermark-ns-maybe, :arity 2, :varargs-min-arity 1, :row 141, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 140, :to clojure.core} {:filename "src/mranderson/move.clj", :row 150, :col 26, :from mranderson.move, :to rewrite-clj.zip.base, :name tag, :arity 1, :from-var import?} {:filename "src/mranderson/move.clj", :row 151, :col 28, :from mranderson.move, :to rewrite-clj.zip.base, :name sexpr, :arity 1, :from-var import?} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var import?, :arity 2, :varargs-min-arity 2, :row 152, :to clojure.core} {:name when-let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var import?, :arity 2, :varargs-min-arity 1, :row 151, :to clojure.core} {:name when-not, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var import?, :arity 2, :varargs-min-arity 1, :row 150, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 149, :to clojure.core} {:fixed-arities #{1}, :private true, :name java-package, :filename "src/mranderson/move.clj", :from mranderson.move, :col 41, :from-var ->new-import-node, :arity 1, :row 155, :to mranderson.move} {:fixed-arities #{1}, :private true, :name java-package, :filename "src/mranderson/move.clj", :from mranderson.move, :col 64, :from-var ->new-import-node, :arity 1, :row 155, :to mranderson.move} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/move.clj", :from mranderson.move, :col 19, :from-var ->new-import-node, :arity 3, :row 155, :to clojure.string} {:fixed-arities #{1}, :name symbol?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var ->new-import-node, :arity 1, :row 157, :to clojure.core} {:fixed-arities #{1 2}, :name symbol, :filename "src/mranderson/move.clj", :from mranderson.move, :col 27, :from-var ->new-import-node, :arity 1, :row 157, :to clojure.core} {:name cond, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var ->new-import-node, :arity 4, :varargs-min-arity 0, :row 156, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var ->new-import-node, :arity 2, :varargs-min-arity 1, :row 155, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 154, :to clojure.core} {:fixed-arities #{2}, :private true, :name java-style-prefix?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 67, :from-var replace-in-import*, :row 164, :to mranderson.move} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/move.clj", :from mranderson.move, :col 59, :from-var replace-in-import*, :arity 2, :varargs-min-arity 4, :row 164, :to clojure.core} {:filename "src/mranderson/move.clj", :row 164, :col 34, :from mranderson.move, :to rewrite-clj.zip, :name find-next-depth-first, :arity 2, :from-var replace-in-import*} {:fixed-arities #{3}, :private true, :name ->new-import-node, :filename "src/mranderson/move.clj", :from mranderson.move, :col 50, :from-var replace-in-import*, :row 165, :to mranderson.move} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/move.clj", :from mranderson.move, :col 42, :from-var replace-in-import*, :arity 3, :varargs-min-arity 4, :row 165, :to clojure.core} {:filename "src/mranderson/move.clj", :row 165, :col 34, :from mranderson.move, :to rewrite-clj.zip, :name edit, :arity 2, :from-var replace-in-import*} {:name some->, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 26, :from-var replace-in-import*, :arity 3, :varargs-min-arity 1, :row 163, :to clojure.core} {:filename "src/mranderson/move.clj", :row 166, :col 8, :from mranderson.move, :to clojure.core, :name recur, :from-var replace-in-import*} {:filename "src/mranderson/move.clj", :row 166, :col 8, :from mranderson.move, :to clojure.core, :name recur, :arity 1, :from-var replace-in-import*} {:filename "src/mranderson/move.clj", :row 167, :col 8, :from mranderson.move, :to rewrite-clj.zip, :name root, :arity 1, :from-var replace-in-import*} {:fixed-arities #{2}, :name if-let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var replace-in-import*, :arity 3, :varargs-min-arity 3, :row 163, :to clojure.core} {:name loop, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var replace-in-import*, :arity 2, :varargs-min-arity 1, :row 162, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 161, :to clojure.core} {:fixed-arities #{1}, :private true, :name import?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 63, :from-var replace-in-import, :row 170, :to mranderson.move} {:filename "src/mranderson/move.clj", :row 170, :col 32, :from mranderson.move, :to rewrite-clj.zip, :name find-next-depth-first, :arity 2, :from-var replace-in-import} {:filename "src/mranderson/move.clj", :row 171, :col 32, :from mranderson.move, :to rewrite-clj.zip, :name up, :arity 1, :from-var replace-in-import} {:name some->, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 24, :from-var replace-in-import, :arity 2, :varargs-min-arity 1, :row 170, :to clojure.core} {:filename "src/mranderson/move.clj", :row 172, :col 59, :from mranderson.move, :to rewrite-clj.zip, :name node, :arity 1, :from-var replace-in-import} {:filename "src/mranderson/move.clj", :row 172, :col 52, :from mranderson.move, :to rewrite-clj.zip, :name edn, :arity 1, :from-var replace-in-import} {:fixed-arities #{3}, :private true, :name replace-in-import*, :filename "src/mranderson/move.clj", :from mranderson.move, :col 32, :from-var replace-in-import, :arity 3, :row 172, :to mranderson.move} {:filename "src/mranderson/move.clj", :row 172, :col 10, :from mranderson.move, :to rewrite-clj.zip, :name replace, :arity 2, :from-var replace-in-import} {:filename "src/mranderson/move.clj", :row 173, :col 9, :from mranderson.move, :to rewrite-clj.zip, :name root, :arity 1, :from-var replace-in-import} {:filename "src/mranderson/move.clj", :row 174, :col 9, :from mranderson.move, :to rewrite-clj.zip, :name edn, :arity 1, :from-var replace-in-import} {:name ->, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var replace-in-import, :arity 3, :varargs-min-arity 1, :row 172, :to clojure.core} {:fixed-arities #{2}, :name if-let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var replace-in-import, :arity 3, :varargs-min-arity 3, :row 170, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 169, :to clojure.core} {:fixed-arities #{2}, :private true, :name watermark-ns-maybe, :filename "src/mranderson/move.clj", :from mranderson.move, :col 19, :from-var replace-in-ns-form, :arity 2, :row 178, :to mranderson.move} {:fixed-arities #{3}, :private true, :name replace-in-import, :filename "src/mranderson/move.clj", :from mranderson.move, :col 19, :from-var replace-in-ns-form, :arity 3, :row 179, :to mranderson.move} {:name ->, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 15, :from-var replace-in-ns-form, :arity 2, :varargs-min-arity 1, :row 178, :to clojure.core} {:fixed-arities #{2}, :private true, :name contains-sym?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 71, :from-var replace-in-ns-form, :row 180, :to mranderson.move} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/move.clj", :from mranderson.move, :col 63, :from-var replace-in-ns-form, :arity 2, :varargs-min-arity 4, :row 180, :to clojure.core} {:filename "src/mranderson/move.clj", :row 180, :col 34, :from mranderson.move, :to rewrite-clj.zip, :name find-next-depth-first, :arity 2, :from-var replace-in-ns-form} {:fixed-arities #{3}, :private true, :name replace-in-node, :filename "src/mranderson/move.clj", :from mranderson.move, :col 50, :from-var replace-in-ns-form, :row 181, :to mranderson.move} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/move.clj", :from mranderson.move, :col 42, :from-var replace-in-ns-form, :arity 3, :varargs-min-arity 4, :row 181, :to clojure.core} {:filename "src/mranderson/move.clj", :row 181, :col 34, :from mranderson.move, :to rewrite-clj.zip, :name edit, :arity 2, :from-var replace-in-ns-form} {:name some->, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 26, :from-var replace-in-ns-form, :arity 2, :varargs-min-arity 1, :row 180, :to clojure.core} {:filename "src/mranderson/move.clj", :row 182, :col 8, :from mranderson.move, :to clojure.core, :name recur, :from-var replace-in-ns-form} {:filename "src/mranderson/move.clj", :row 182, :col 8, :from mranderson.move, :to clojure.core, :name recur, :arity 1, :from-var replace-in-ns-form} {:filename "src/mranderson/move.clj", :row 183, :col 8, :from mranderson.move, :to rewrite-clj.zip, :name root-string, :arity 1, :from-var replace-in-ns-form} {:fixed-arities #{2}, :name if-let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var replace-in-ns-form, :arity 3, :varargs-min-arity 3, :row 180, :to clojure.core} {:name loop, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var replace-in-ns-form, :arity 2, :varargs-min-arity 1, :row 178, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 177, :to clojure.core} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 26, :from-var source-replacement, :arity 1, :row 186, :to clojure.core} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 26, :from-var source-replacement, :arity 1, :row 187, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 26, :from-var source-replacement, :arity 2, :varargs-min-arity 1, :row 188, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 26, :from-var source-replacement, :arity 2, :varargs-min-arity 1, :row 189, :to clojure.core} {:fixed-arities #{1}, :private true, :name java-package, :filename "src/mranderson/move.clj", :from mranderson.move, :col 26, :from-var source-replacement, :arity 1, :row 190, :to mranderson.move} {:fixed-arities #{1}, :private true, :name java-package, :filename "src/mranderson/move.clj", :from mranderson.move, :col 26, :from-var source-replacement, :arity 1, :row 191, :to mranderson.move} {:fixed-arities #{1}, :private true, :name java-package, :filename "src/mranderson/move.clj", :from mranderson.move, :col 35, :from-var source-replacement, :arity 1, :row 192, :to mranderson.move} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 26, :from-var source-replacement, :arity 2, :varargs-min-arity 1, :row 192, :to clojure.core} {:fixed-arities #{1}, :private true, :name java-package, :filename "src/mranderson/move.clj", :from mranderson.move, :col 35, :from-var source-replacement, :arity 1, :row 193, :to mranderson.move} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 26, :from-var source-replacement, :arity 2, :varargs-min-arity 1, :row 193, :to clojure.core} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var source-replacement, :arity 2, :varargs-min-arity 2, :row 196, :to clojure.core} {:fixed-arities #{2}, :name starts-with?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 13, :from-var source-replacement, :arity 2, :row 199, :to clojure.string} {:fixed-arities #{2}, :name includes?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 13, :from-var source-replacement, :arity 2, :row 200, :to clojure.string} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 8, :from-var source-replacement, :arity 2, :varargs-min-arity 1, :row 199, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var source-replacement, :arity 3, :row 201, :to clojure.string} {:name cond, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var source-replacement, :arity 10, :varargs-min-arity 0, :row 194, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var source-replacement, :arity 2, :varargs-min-arity 1, :row 186, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 185, :to clojure.core} {:fixed-arities #{2}, :name starts-with?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var source-replacement, :arity 2, :row 203, :to clojure.string} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var source-replacement, :arity 3, :row 204, :to clojure.string} {:fixed-arities #{2}, :name starts-with?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var source-replacement, :arity 2, :row 206, :to clojure.string} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var source-replacement, :arity 3, :row 207, :to clojure.string} {:fixed-arities #{1 3 2}, :name def, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 2, :row 212, :to clojure.core} {:filename "src/mranderson/move.clj", :row 219, :col 31, :from mranderson.move, :to mranderson.move, :name symbol-regex, :private true, :from-var replace-in-source} {:fixed-arities #{3}, :private true, :name source-replacement, :filename "src/mranderson/move.clj", :from mranderson.move, :col 53, :from-var replace-in-source, :row 219, :to mranderson.move} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/move.clj", :from mranderson.move, :col 45, :from-var replace-in-source, :arity 3, :varargs-min-arity 4, :row 219, :to clojure.core} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/move.clj", :from mranderson.move, :col 4, :from-var replace-in-source, :arity 3, :row 219, :to clojure.string} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 218, :to clojure.core} {:filename "src/mranderson/move.clj", :row 222, :col 26, :from mranderson.move, :to rewrite-clj.zip.base, :name tag, :arity 1, :from-var after-platfrom-marker?} {:filename "src/mranderson/move.clj", :row 223, :col 27, :from mranderson.move, :to rewrite-clj.zip, :name left, :arity 1, :from-var after-platfrom-marker?} {:filename "src/mranderson/move.clj", :row 223, :col 18, :from mranderson.move, :to rewrite-clj.zip.base, :name sexpr, :arity 1, :from-var after-platfrom-marker?} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 6, :from-var after-platfrom-marker?, :arity 2, :varargs-min-arity 2, :row 223, :to clojure.core} {:name when-not, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var after-platfrom-marker?, :arity 2, :varargs-min-arity 1, :row 222, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 221, :to clojure.core} {:fixed-arities #{2}, :private true, :name after-platfrom-marker?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 63, :from-var find-and-replace-platform-specific-subforms, :row 228, :to mranderson.move} {:fixed-arities #{1 4 3 2}, :name partial, :filename "src/mranderson/move.clj", :from mranderson.move, :col 55, :from-var find-and-replace-platform-specific-subforms, :arity 2, :varargs-min-arity 4, :row 228, :to clojure.core} {:filename "src/mranderson/move.clj", :row 228, :col 26, :from mranderson.move, :to rewrite-clj.zip, :name find-next-depth-first, :arity 2, :from-var find-and-replace-platform-specific-subforms} {:filename "src/mranderson/move.clj", :row 229, :col 8, :from mranderson.move, :to clojure.core, :name recur, :from-var find-and-replace-platform-specific-subforms} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 50, :from-var find-and-replace-platform-specific-subforms, :arity 1, :row 229, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 45, :from-var find-and-replace-platform-specific-subforms, :arity 2, :varargs-min-arity 1, :row 229, :to clojure.core} {:fixed-arities #{1 2}, :name symbol, :filename "src/mranderson/move.clj", :from mranderson.move, :col 37, :from-var find-and-replace-platform-specific-subforms, :arity 1, :row 229, :to clojure.core} {:filename "src/mranderson/move.clj", :row 229, :col 15, :from mranderson.move, :to rewrite-clj.zip, :name replace, :arity 2, :from-var find-and-replace-platform-specific-subforms} {:filename "src/mranderson/move.clj", :row 229, :col 80, :from mranderson.move, :to clojure.core, :name conj, :arity 2, :from-var find-and-replace-platform-specific-subforms} {:filename "src/mranderson/move.clj", :row 229, :col 8, :from mranderson.move, :to clojure.core, :name recur, :arity 2, :from-var find-and-replace-platform-specific-subforms} {:filename "src/mranderson/move.clj", :row 230, :col 28, :from mranderson.move, :to rewrite-clj.zip, :name root, :arity 1, :from-var find-and-replace-platform-specific-subforms} {:filename "src/mranderson/move.clj", :row 230, :col 21, :from mranderson.move, :to rewrite-clj.zip, :name edn, :arity 1, :from-var find-and-replace-platform-specific-subforms} {:fixed-arities #{2}, :name if-let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var find-and-replace-platform-specific-subforms, :arity 3, :varargs-min-arity 3, :row 228, :to clojure.core} {:name loop, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var find-and-replace-platform-specific-subforms, :arity 2, :varargs-min-arity 1, :row 226, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 225, :to clojure.core} {:filename "src/mranderson/move.clj", :row 237, :col 8, :from mranderson.move, :to clojure.core, :name recur, :from-var restore-platform-specific-subforms} {:fixed-arities #{1}, :name name, :filename "src/mranderson/move.clj", :from mranderson.move, :col 44, :from-var restore-platform-specific-subforms, :arity 1, :row 237, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 39, :from-var restore-platform-specific-subforms, :arity 2, :varargs-min-arity 1, :row 237, :to clojure.core} {:filename "src/mranderson/move.clj", :row 237, :col 72, :from mranderson.move, :to rewrite-clj.zip, :name string, :arity 1, :from-var restore-platform-specific-subforms} {:fixed-arities #{3}, :name replace-first, :filename "src/mranderson/move.clj", :from mranderson.move, :col 15, :from-var restore-platform-specific-subforms, :arity 3, :row 237, :to clojure.string} {:filename "src/mranderson/move.clj", :row 237, :col 8, :from mranderson.move, :to clojure.core, :name recur, :arity 2, :from-var restore-platform-specific-subforms} {:fixed-arities #{3 2}, :name if-not, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var restore-platform-specific-subforms, :arity 3, :row 235, :to clojure.core} {:name loop, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var restore-platform-specific-subforms, :arity 2, :varargs-min-arity 1, :row 233, :to clojure.core} {:name defn-, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 232, :to clojure.core} {:fixed-arities #{1}, :private true, :name split-ns-form-ns-body, :filename "src/mranderson/move.clj", :from mranderson.move, :col 34, :from-var replace-ns-symbol, :arity 1, :row 248, :to mranderson.move} {:fixed-arities #{1}, :name extension->platform, :filename "src/mranderson/move.clj", :from mranderson.move, :col 54, :from-var replace-ns-symbol, :arity 1, :row 249, :to mranderson.util} {:fixed-arities #{1}, :name platform-comp, :filename "src/mranderson/move.clj", :from mranderson.move, :col 34, :from-var replace-ns-symbol, :arity 1, :row 249, :to mranderson.util} {:fixed-arities #{1 2}, :name =, :filename "src/mranderson/move.clj", :from mranderson.move, :col 43, :from-var replace-ns-symbol, :arity 2, :varargs-min-arity 2, :row 250, :to clojure.core} {:fixed-arities #{2}, :private true, :name find-and-replace-platform-specific-subforms, :filename "src/mranderson/move.clj", :from mranderson.move, :col 43, :from-var replace-ns-symbol, :arity 2, :row 252, :to mranderson.move} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 38, :from-var replace-ns-symbol, :arity 3, :varargs-min-arity 1, :row 250, :to clojure.core} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 34, :from-var replace-ns-symbol, :arity 2, :varargs-min-arity 1, :row 250, :to clojure.core} {:fixed-arities #{4}, :private true, :name replace-in-ns-form, :filename "src/mranderson/move.clj", :from mranderson.move, :col 42, :from-var replace-ns-symbol, :arity 4, :row 255, :to mranderson.move} {:name future, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 34, :from-var replace-ns-symbol, :arity 1, :varargs-min-arity 0, :row 255, :to clojure.core} {:fixed-arities #{3}, :private true, :name replace-in-source, :filename "src/mranderson/move.clj", :from mranderson.move, :col 42, :from-var replace-ns-symbol, :arity 3, :row 256, :to mranderson.move} {:name future, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 34, :from-var replace-ns-symbol, :arity 1, :varargs-min-arity 0, :row 256, :to clojure.core} {:filename "src/mranderson/move.clj", :row 257, :col 38, :from mranderson.move, :to clojure.core, :name seq, :arity 1, :from-var replace-ns-symbol} {:fixed-arities #{3}, :private true, :name restore-platform-specific-subforms, :filename "src/mranderson/move.clj", :from mranderson.move, :col 36, :from-var replace-ns-symbol, :arity 3, :row 258, :to mranderson.move} {:filename "src/mranderson/move.clj", :row 257, :col 34, :from mranderson.move, :to clojure.core, :name if, :arity 3, :from-var replace-ns-symbol} {:filename "src/mranderson/move.clj", :row 263, :col 40, :from mranderson.move, :to mranderson.move, :name ns-form-placeholder, :from-var replace-ns-symbol} {:fixed-arities #{3}, :name replace, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var replace-ns-symbol, :arity 3, :row 263, :to clojure.string} {:fixed-arities #{0 1}, :name and, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 7, :from-var replace-ns-symbol, :arity 2, :varargs-min-arity 1, :row 261, :to clojure.core} {:fixed-arities #{0 1}, :name or, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var replace-ns-symbol, :arity 2, :varargs-min-arity 1, :row 260, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var replace-ns-symbol, :arity 2, :varargs-min-arity 1, :row 248, :to clojure.core} {:name defn, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 239, :to clojure.core} {:fixed-arities #{3}, :private true, :name sym->file, :filename "src/mranderson/move.clj", :from mranderson.move, :col 22, :from-var move-ns-file, :arity 3, :row 274, :to mranderson.move} {:fixed-arities #{3}, :private true, :name sym->file, :filename "src/mranderson/move.clj", :from mranderson.move, :col 21, :from-var move-ns-file, :arity 3, :row 275, :to mranderson.move} {:filename "src/mranderson/move.clj", :row 276, :col 17, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .getParentFile, :arity 1, :from-var move-ns-file} {:filename "src/mranderson/move.clj", :row 276, :col 8, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .mkdirs, :arity 1, :from-var move-ns-file} {:name copy, :filename "src/mranderson/move.clj", :from mranderson.move, :col 8, :from-var move-ns-file, :arity 2, :varargs-min-arity 2, :row 277, :to clojure.java.io} {:filename "src/mranderson/move.clj", :row 278, :col 8, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .delete, :arity 1, :from-var move-ns-file} {:filename "src/mranderson/move.clj", :row 279, :col 19, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .getParentFile, :arity 1, :from-var move-ns-file} {:filename "src/mranderson/move.clj", :row 280, :col 24, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .listFiles, :arity 1, :from-var move-ns-file} {:fixed-arities #{1}, :name empty?, :filename "src/mranderson/move.clj", :from mranderson.move, :col 16, :from-var move-ns-file, :arity 1, :row 280, :to clojure.core} {:filename "src/mranderson/move.clj", :row 281, :col 12, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .delete, :arity 1, :from-var move-ns-file} {:filename "src/mranderson/move.clj", :row 282, :col 12, :from mranderson.move, :to clojure.core, :name recur, :from-var move-ns-file} {:filename "src/mranderson/move.clj", :row 282, :col 19, :from mranderson.move, :to :clj-kondo/unknown-namespace, :name .getParentFile, :arity 1, :from-var move-ns-file} {:filename "src/mranderson/move.clj", :row 282, :col 12, :from mranderson.move, :to clojure.core, :name recur, :arity 1, :from-var move-ns-file} {:name when, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 10, :from-var move-ns-file, :arity 3, :varargs-min-arity 1, :row 280, :to clojure.core} {:name loop, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 8, :from-var move-ns-file, :arity 2, :varargs-min-arity 1, :row 279, :to clojure.core} {:name let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 6, :from-var move-ns-file, :arity 5, :varargs-min-arity 1, :row 275, :to clojure.core} {:filename "src/mranderson/move.clj", :row 283, :col 13, :from mranderson.move, :to java.io, :name FileNotFoundException, :from-var move-ns-file} {:name format, :filename "src/mranderson/move.clj", :from mranderson.move, :col 37, :from-var move-ns-file, :arity 3, :varargs-min-arity 1, :row 283, :to clojure.core} {:filename "src/mranderson/move.clj", :row nil, :col nil, :from mranderson.move, :to clojure.core, :name new, :arity 2, :from-var move-ns-file} {:filename "src/mranderson/move.clj", :row 283, :col 6, :from mranderson.move, :to clojure.core, :name throw, :arity 1, :from-var move-ns-file} {:fixed-arities #{2}, :name if-let, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 4, :from-var move-ns-file, :arity 3, :varargs-min-arity 3, :row 274, :to clojure.core} {:name defn, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 266, :to clojure.core} {:filename "src/mranderson/move.clj", :row 293, :col 29, :from mranderson.move, :to mranderson.move, :name replace-ns-symbol, :fixed-arities #{6}, :from-var replace-ns-symbol-in-source-files} {:private true, :name update-file, :filename "src/mranderson/move.clj", :from mranderson.move, :col 12, :from-var replace-ns-symbol-in-source-files, :arity 7, :varargs-min-arity 2, :row 293, :to mranderson.move} {:name ->>, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 7, :from-var replace-ns-symbol-in-source-files, :arity 3, :varargs-min-arity 1, :row 291, :to clojure.core} {:name fn, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 5, :from-var replace-ns-symbol-in-source-files, :arity 2, :varargs-min-arity 0, :row 290, :to clojure.core} {:fixed-arities #{2}, :private true, :name clojure-source-files, :filename "src/mranderson/move.clj", :from mranderson.move, :col 5, :from-var replace-ns-symbol-in-source-files, :arity 2, :row 294, :to mranderson.move} {:filename "src/mranderson/move.clj", :row 289, :col 4, :from mranderson.move, :to parallel.core, :name pmap, :arity 2, :from-var replace-ns-symbol-in-source-files} {:name defn, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 285, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/move.clj", :from mranderson.move, :col 12, :from-var replace-ns-symbol-in-source-files, :arity 1, :varargs-min-arity 1, :row 291, :to clojure.core} {:fixed-arities #{1}, :name file->extension, :filename "src/mranderson/move.clj", :from mranderson.move, :col 11, :from-var replace-ns-symbol-in-source-files, :arity 1, :row 292, :to mranderson.util} {:fixed-arities #{4}, :name move-ns-file, :filename "src/mranderson/move.clj", :from mranderson.move, :col 4, :from-var move-ns, :arity 4, :row 308, :to mranderson.move} {:fixed-arities #{5}, :name replace-ns-symbol-in-source-files, :filename "src/mranderson/move.clj", :from mranderson.move, :col 4, :from-var move-ns, :arity 5, :row 309, :to mranderson.move} {:name defn, :filename "src/mranderson/move.clj", :from mranderson.move, :macro true, :col 2, :arity 5, :varargs-min-arity 2, :row 296, :to clojure.core} {:filename "src/mranderson/plugin.clj", :row 6, :col 18, :from mranderson.plugin, :to clojure.tools.namespace.file, :name read-file-ns-decl, :arity 1, :from-var find-gen-class-ns} {:fixed-arities #{0 1}, :name str, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :col 27, :from-var find-gen-class-ns, :varargs-min-arity 1, :row 7, :to clojure.core} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :col 21, :from-var find-gen-class-ns, :arity 2, :varargs-min-arity 5, :row 7, :to clojure.core} {:filename "src/mranderson/plugin.clj", :row 7, :col 10, :from mranderson.plugin, :to :clj-kondo/unknown-namespace, :name .contains, :arity 2, :from-var find-gen-class-ns} {:filename "src/mranderson/plugin.clj", :row 8, :col 28, :from mranderson.plugin, :to clojure.tools.namespace.file, :name read-file-ns-decl, :arity 1, :from-var find-gen-class-ns} {:filename "src/mranderson/plugin.clj", :row 8, :col 46, :from mranderson.plugin, :to clojure.core, :name second, :arity 1, :from-var find-gen-class-ns} {:name ->, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :macro true, :col 20, :from-var find-gen-class-ns, :arity 3, :varargs-min-arity 1, :row 8, :to clojure.core} {:filename "src/mranderson/plugin.clj", :row 8, :col 8, :from mranderson.plugin, :to clojure.core, :name conj, :arity 2, :from-var find-gen-class-ns} {:filename "src/mranderson/plugin.clj", :row 7, :col 6, :from mranderson.plugin, :to clojure.core, :name if, :arity 3, :from-var find-gen-class-ns} {:name let, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :macro true, :col 4, :from-var find-gen-class-ns, :arity 2, :varargs-min-arity 1, :row 6, :to clojure.core} {:name defn-, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 5, :to clojure.core} {:fixed-arities #{2}, :name first-src-path, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :col 16, :from-var middleware, :arity 2, :row 15, :to mranderson.util} {:fixed-arities #{2}, :private true, :name find-gen-class-ns, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :col 27, :from-var middleware, :row 16, :to mranderson.plugin} {:fixed-arities #{1}, :name clojure-source-files, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :col 50, :from-var middleware, :arity 1, :row 16, :to mranderson.util} {:fixed-arities #{3 2}, :name reduce, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :col 20, :from-var middleware, :arity 3, :row 16, :to clojure.core} {:filename "src/mranderson/plugin.clj", :row 18, :col 40, :from mranderson.plugin, :to mranderson.util, :name source-dep?, :fixed-arities #{1}, :from-var middleware} {:fixed-arities #{1 2}, :name remove, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :col 33, :from-var middleware, :arity 2, :row 18, :to clojure.core} {:filename "src/mranderson/plugin.clj", :row 18, :col 12, :from mranderson.plugin, :to clojure.core, :name assoc, :arity 3, :from-var middleware} {:filename "src/mranderson/plugin.clj", :row 19, :col 12, :from mranderson.plugin, :to clojure.core, :name assoc, :arity 3, :from-var middleware} {:name ->, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :macro true, :col 8, :from-var middleware, :arity 3, :varargs-min-arity 1, :row 17, :to clojure.core} {:name let, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :macro true, :col 6, :from-var middleware, :arity 2, :varargs-min-arity 1, :row 15, :to clojure.core} {:filename "src/mranderson/plugin.clj", :row 14, :col 4, :from mranderson.plugin, :to clojure.core, :name if, :arity 3, :from-var middleware} {:name defn, :filename "src/mranderson/plugin.clj", :from mranderson.plugin, :macro true, :col 2, :arity 4, :varargs-min-arity 2, :row 11, :to clojure.core} {:fixed-arities #{1 2}, :name not=, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 25, :from-var lookup-opt, :arity 2, :varargs-min-arity 2, :row 9, :to clojure.core} {:filename "src/leiningen/inline_deps.clj", :row nil, :col nil, :from leiningen.inline-deps, :to clojure.core, :name let*, :arity 2, :from-var lookup-opt} {:filename "src/leiningen/inline_deps.clj", :row nil, :col nil, :from leiningen.inline-deps, :to clojure.core, :name fn*, :arity 2, :from-var lookup-opt} {:fixed-arities #{1 2}, :name drop-while, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 12, :from-var lookup-opt, :arity 2, :row 9, :to clojure.core} {:filename "src/leiningen/inline_deps.clj", :row 9, :col 4, :from leiningen.inline-deps, :to clojure.core, :name second, :arity 1, :from-var lookup-opt} {:name defn, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 8, :to clojure.core} {:filename "src/leiningen/inline_deps.clj", :row 12, :col 27, :from leiningen.inline-deps, :to java.util, :name randomUUID, :arity 0, :from-var generate-default-project-prefix} {:fixed-arities #{0 1}, :name str, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 26, :from-var generate-default-project-prefix, :arity 1, :varargs-min-arity 1, :row 13, :to clojure.core} {:filename "src/leiningen/inline_deps.clj", :row 14, :col 27, :from leiningen.inline-deps, :to :clj-kondo/unknown-namespace, :name .substring, :arity 3, :from-var generate-default-project-prefix} {:name ->, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 22, :from-var generate-default-project-prefix, :arity 3, :varargs-min-arity 1, :row 12, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 4, :from-var generate-default-project-prefix, :arity 2, :varargs-min-arity 1, :row 12, :to clojure.core} {:name defn-, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 11, :to clojure.core} {:fixed-arities #{1 2}, :name read-string, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 44, :from-var lein-project->ctx, :arity 1, :row 18, :to clojure.edn} {:filename "src/leiningen/inline_deps.clj", :row nil, :col nil, :from leiningen.inline-deps, :to clojure.core, :name let*, :arity 2, :from-var lein-project->ctx} {:filename "src/leiningen/inline_deps.clj", :row nil, :col nil, :from leiningen.inline-deps, :to clojure.core, :name fn*, :arity 2, :from-var lein-project->ctx} {:fixed-arities #{1 4 3 2}, :name map, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 38, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 4, :row 18, :to clojure.core} {:fixed-arities #{2}, :name lookup-opt, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 38, :from-var lein-project->ctx, :arity 2, :row 19, :to leiningen.inline-deps} {:fixed-arities #{1}, :name name, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 66, :from-var lein-project->ctx, :arity 1, :row 20, :to clojure.core} {:fixed-arities #{0 1}, :name and, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 42, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 1, :row 20, :to clojure.core} {:fixed-arities #{1}, :name nil?, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 47, :from-var lein-project->ctx, :arity 1, :row 21, :to clojure.core} {:fixed-arities #{0 1}, :name and, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 42, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 1, :row 21, :to clojure.core} {:fixed-arities #{0}, :private true, :name generate-default-project-prefix, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 42, :from-var lein-project->ctx, :arity 0, :row 22, :to leiningen.inline-deps} {:fixed-arities #{0 1}, :name or, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 38, :from-var lein-project->ctx, :arity 3, :varargs-min-arity 1, :row 20, :to clojure.core} {:fixed-arities #{2}, :name lookup-opt, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 38, :from-var lein-project->ctx, :arity 2, :row 23, :to leiningen.inline-deps} {:fixed-arities #{2}, :name lookup-opt, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 38, :from-var lein-project->ctx, :arity 2, :row 24, :to leiningen.inline-deps} {:fixed-arities #{0 1}, :name str, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 49, :from-var lein-project->ctx, :varargs-min-arity 1, :row 25, :to clojure.core} {:fixed-arities #{1}, :name count, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 65, :from-var lein-project->ctx, :arity 1, :row 25, :to clojure.core} {:fixed-arities #{1}, :name inc, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 60, :from-var lein-project->ctx, :arity 1, :row 25, :to clojure.core} {:fixed-arities #{1 2}, :name drop, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 54, :from-var lein-project->ctx, :arity 2, :row 25, :to clojure.core} {:fixed-arities #{4 3 2 5}, :name apply, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 43, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 5, :row 25, :to clojure.core} {:fixed-arities #{0 1}, :name str, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 38, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 1, :row 25, :to clojure.core} {:filename "src/leiningen/inline_deps.clj", :row 26, :col 45, :from leiningen.inline-deps, :to me.raynes.fs, :name directory?, :from-var lein-project->ctx} {:fixed-arities #{0 1}, :name str, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 81, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 1, :row 26, :to clojure.core} {:filename "src/leiningen/inline_deps.clj", :row 26, :col 72, :from leiningen.inline-deps, :to me.raynes.fs, :name file, :arity 1, :from-var lein-project->ctx} {:filename "src/leiningen/inline_deps.clj", :row 26, :col 60, :from leiningen.inline-deps, :to :clj-kondo/unknown-namespace, :name .listFiles, :arity 1, :from-var lein-project->ctx} {:fixed-arities #{1 2}, :name filter, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 38, :from-var lein-project->ctx, :arity 2, :row 26, :to clojure.core} {:fixed-arities #{2}, :name lookup-opt, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 38, :from-var lein-project->ctx, :arity 2, :row 27, :to leiningen.inline-deps} {:fixed-arities #{1}, :name nil?, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 67, :from-var lein-project->ctx, :arity 1, :row 28, :to clojure.core} {:fixed-arities #{0 1}, :name and, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 62, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 1, :row 28, :to clojure.core} {:fixed-arities #{0 1}, :name or, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 38, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 1, :row 28, :to clojure.core} {:name debug, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 6, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 0, :row 29, :to mranderson.util} {:name prn-str, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 36, :from-var lein-project->ctx, :arity 1, :varargs-min-arity 0, :row 30, :to clojure.core} {:name debug, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 6, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 0, :row 30, :to mranderson.util} {:name info, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 6, :from-var lein-project->ctx, :arity 2, :varargs-min-arity 0, :row 31, :to mranderson.util} {:name let, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 4, :from-var lein-project->ctx, :arity 5, :varargs-min-arity 1, :row 18, :to clojure.core} {:name defn-, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 16, :to clojure.core} {:fixed-arities #{1}, :name sym->file-name, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 53, :from-var initial-paths, :arity 1, :row 45, :to mranderson.util} {:filename "src/leiningen/inline_deps.clj", :row 45, :col 22, :from leiningen.inline-deps, :to me.raynes.fs, :name file, :arity 3, :from-var initial-paths} {:name defn-, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 2, :arity 3, :varargs-min-arity 2, :row 44, :to clojure.core} {:fixed-arities #{2}, :name copy-source-files, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 4, :from-var inline-deps, :arity 2, :row 59, :to mranderson.core} {:fixed-arities #{2}, :private true, :name lein-project->ctx, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 36, :from-var inline-deps, :arity 2, :row 60, :to leiningen.inline-deps} {:fixed-arities #{2}, :private true, :name initial-paths, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 36, :from-var inline-deps, :arity 2, :row 61, :to leiningen.inline-deps} {:fixed-arities #{4}, :name mranderson, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :col 6, :from-var inline-deps, :arity 4, :row 62, :to mranderson.core} {:name let, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 4, :from-var inline-deps, :arity 2, :varargs-min-arity 1, :row 60, :to clojure.core} {:name defn, :filename "src/leiningen/inline_deps.clj", :from leiningen.inline-deps, :macro true, :col 2, :arity 5, :varargs-min-arity 2, :row 49, :to clojure.core}]}}
